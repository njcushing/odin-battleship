(()=>{var e={786:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(537),a=n.n(r),l=n(645),o=n.n(l)()(a());o.push([e.id,":root {\n    --battleship-history-box-width: 8rem;\n    --battleship-board-size: 20rem;\n    --battleship-info-box-height: 4rem;\n    --battleship-place-ship-box-width: 8rem;\n}\n\n.btls-base {\n    display: grid;\n    grid-template-rows: repeat(3, auto); \n    grid-template-columns: repeat(3, auto); \n    border: 1px solid black;\n}\n\n.btls-history-box {\n    grid-area: 2 / 1 / 3 / 2;\n    width: var(--battleship-history-box-width, 10rem);\n    border: 1px solid #000;\n}\n\n.btls-title {\n    grid-area: 1 / 1 / 2 / -1;\n    font-size: 3rem;\n    text-align: center;\n}\n\n.btls-board-area {\n    grid-area: 2 / 2 / 3 / 3;\n    display: grid;\n    grid-template-rows:  auto var(--battleship-board-size, 24rem) auto var(--battleship-info-box-height, 3rem) auto var(--battleship-board-size, 24rem) auto;\n    grid-template-columns: auto var(--battleship-board-size, 24rem) var(--battleship-place-ship-box-width, 10rem);\n    padding: 0.5rem;\n}\n\n.btls-board-one,\n.btls-board-two {\n    display: grid;\n    grid-template-rows: repeat(10, auto);\n    grid-template-columns: repeat(10, auto);\n    padding: 0.5rem;\n    gap: 0.2rem;\n}\n\n.btls-axis-1-x,\n.btls-axis-1-y,\n.btls-axis-2-x,\n.btls-axis-2-y {\n    display: flex;\n    justify-content: space-around;\n    text-align: center;\n    vertical-align: center;\n}\n\n.btls-board-one {\n    grid-area: -3 / 2 / -2 / 3;\n}\n.btls-axis-1-x {\n    grid-area: -2 / 2 / -1 / 3;\n    padding: 0rem 0.5rem;\n}\n.btls-axis-1-y {\n    grid-area: -3 / 1 / -2 / 2;\n    flex-direction: column;\n    padding: 0.5rem 0rem;\n}\n.btls-board-two {\n    grid-area: 2 / 2 / 3 / 3;\n}\n.btls-axis-2-x {\n    grid-area: 1 / 2 / 2 / 3;\n    padding: 0rem 0.5rem;\n}\n.btls-axis-2-y {\n    grid-area: 2 / 1 / 3 / 2;\n    flex-direction: column;\n    padding: 0.5rem 0rem;\n}\n\n.btls-axis-no {\n    padding: 0rem;\n    margin: 0rem;\n}\n\n.btls-b1-id,\n.btls-b2-id {\n    font-size: 0.8rem;\n    text-align: center;\n    vertical-align: center;\n}\n\n.btls-b1-id {\n    grid-area: -4 / 2 / -3 / 3;\n}\n.btls-b2-id {\n    grid-area: 3 / 2 / 4 / 3;\n}\n\n.btls-b1-btns,\n.btls-b2-btns {\n    display: flex;\n    justify-content: center;\n    gap: 0.3rem;\n}\n.btls-b1-btns {\n    grid-area: -4 / 3 / -3 / 4;\n}\n.btls-b2-btns {\n    grid-area: 3 / 3 / 4 / 4;\n}\n\n.btls-b1-change-style-button,\n.btls-b2-change-style-button,\n.btls-b1-hide-ships-button,\n.btls-b2-hide-ships-button {\n    font-size: 0.5rem;\n    border-radius: 9999px;\n    outline: none;\n    border: none;\n    padding: 0.3rem 0.4rem;\n}\n\n.btls-b1-change-style-button,\n.btls-b2-change-style-button {\n    background-color: #5bd656;\n}\n.btls-b1-change-style-button:hover,\n.btls-b2-change-style-button:hover {\n    background-color: #6bf566;\n}\n.btls-b1-change-style-button:active,\n.btls-b2-change-style-button:active {\n    background-color: #31ac2c;\n}\n.btls-b1-hide-ships-button,\n.btls-b2-hide-ships-button {\n    background-color: #ecc825;\n}\n.btls-b1-hide-ships-button:hover,\n.btls-b2-hide-ships-button:hover {\n    background-color: #fcdc4e;\n}\n.btls-b1-hide-ships-button:active,\n.btls-b2-hide-ships-button:active {\n    background-color: #d4b216;\n}\n\n.btls-info-box {\n    grid-area: -5 / 2 / -4 / 3;\n    display: flex;\n    flex-direction: column;\n    place-content: center;\n    align-items: center;\n    text-align: center;\n    padding: 0.5rem;\n}\n\n.btls-b1-place-ship-box,\n.btls-b2-place-ship-box {\n    display: grid;\n    grid-template-rows: 1fr repeat(4, auto);\n    grid-template-columns: repeat(2, calc(50% - 0.1rem));\n    align-items: center;\n    width: calc(var(--battleship-place-ship-box-width, 10rem) - 0.2rem);\n    padding: 0.5rem 0rem;\n    gap: 0.4rem 0.2rem;\n}\n.btls-b1-place-ship-box {\n    grid-area: 6 / -2 / 7 / -1;\n}\n.btls-b2-place-ship-box {\n    grid-area: 2 / -2 / 3 / -1;\n}\n\n.btls-b1-place-ship-model,\n.btls-b2-place-ship-model {\n    grid-area: 1 / 1 / 2 / -1;\n    place-self: center;\n    width: 100%;\n    height: 100%;\n    gap: 0.2rem;\n}\n\n.btls-model-cell {\n    outline: 1px solid black;\n}\n\n.btls-b1-place-ship-size-label,\n.btls-b2-place-ship-size-label,\n.btls-b1-place-ship-x-coord-label,\n.btls-b2-place-ship-x-coord-label,\n.btls-b1-place-ship-y-coord-label,\n.btls-b2-place-ship-y-coord-label {\n    font-size: 0.8rem;\n    text-align: center;\n}\n.btls-b1-place-ship-size-label,\n.btls-b2-place-ship-size-label {\n    grid-area: 2 / 1 / 3 / 2;\n}\n.btls-b1-place-ship-x-coord-label,\n.btls-b2-place-ship-x-coord-label {\n    grid-area: 3 / 1 / 4 / 2;\n}\n.btls-b1-place-ship-y-coord-label,\n.btls-b2-place-ship-y-coord-label {\n    grid-area: 4 / 1 / 5 / 2;\n}\n\n.btls-b1-place-ship-size,\n.btls-b2-place-ship-size,\n.btls-b1-place-ship-x-coord,\n.btls-b2-place-ship-x-coord,\n.btls-b1-place-ship-y-coord,\n.btls-b2-place-ship-y-coord {\n    font-size: 1rem;\n    border-radius: 9999px;\n    padding: 0.1rem 0.3rem;\n    border: none;\n    outline: 1px solid black;\n}\n.btls-b1-place-ship-size,\n.btls-b2-place-ship-size {\n    grid-area: 2 / 2 / 3 / 3;\n}\n.btls-b1-place-ship-x-coord,\n.btls-b2-place-ship-x-coord {\n    grid-area: 3 / 2 / 4 / 3;\n}\n.btls-b1-place-ship-y-coord,\n.btls-b2-place-ship-y-coord {\n    grid-area: 4 / 2 / 5 / 3;\n}\n\n.btls-b1-place-ship-rotation,\n.btls-b2-place-ship-rotation,\n.btls-b1-place-ship,\n.btls-b2-place-ship {\n    font-size: 0.8rem;\n    border-radius: 9999px;\n    outline: none;\n    border: none;\n    padding: 0.3rem 0.1rem;\n}\n\n.btls-b1-place-ship-rotation,\n.btls-b2-place-ship-rotation {\n    grid-area: 5 / 1 / 6 / -1;\n    background-color: #fa8bde;\n}\n.btls-b1-place-ship-rotation:hover,\n.btls-b2-place-ship-rotation:hover {\n    background-color: #ffabea;\n}\n.btls-b1-place-ship-rotation:active,\n.btls-b2-place-ship-rotation:active {\n    background-color: #d64ab3;\n}\n\n.btls-b1-place-ship,\n.btls-b2-place-ship {\n    grid-area: 6 / 1 / 7 / -1;\n    background-color: #9b8afc;\n}\n.btls-b1-place-ship:hover,\n.btls-b2-place-ship:hover {\n    background-color: #b5a8ff;\n}\n.btls-b1-place-ship:active,\n.btls-b2-place-ship:active {\n    background-color: #7e68fc;\n}\n\n.btls-buttons {\n    grid-area: 3 / 1 / -1 / -1;\n    display: flex;\n    justify-content: center;\n    gap: 0.5rem;\n}\n\n.btls-start,\n.btls-reset {\n    font-size: 0.8rem;\n    border-radius: 9999px;\n    background-color: #fa8bde;\n    outline: none;\n    border: none;\n    padding: 0.5rem 0.8rem;\n    margin: 0.8rem 0rem;\n}\n.btls-start {\n    background-color: #60e654;\n}\n.btls-start:hover {\n    background-color: #80f775;\n}\n.btls-start:active {\n    background-color: #49d13d;\n}\n.btls-reset {\n    background-color: #eb6767;\n}\n.btls-reset:hover {\n    background-color: #eb7f7f;\n}\n.btls-reset:active {\n    background-color: #dd4e4e;\n}\n\n.btls-cell {\n    outline: 1px solid black;\n}\n.btls-board-area:not(.game-ended) .btls-cell:hover {\n    outline: 2px solid black;\n}\n\n.btls-cell.empty {\n    background-color: rgb(255, 255, 255);\n}\n.btls-board-area:not(.game-ended) .btls-cell.empty:hover {\n    background-color: #ececec;\n}\n.btls-board-area:not(.game-ended) .btls-cell.empty:active {\n    background-color: #d1d1d1;\n}\n.btls-board-area:not(.game-ended) .btls-board-one:not(.ships-hidden) > .btls-cell.ship,\n.btls-board-area.game-ended .btls-board-one:not(.ships-hidden) > .btls-cell.ship,\n.btls-board-area.game-ended .btls-board-one.ships-hidden > .btls-cell.ship {\n    background-color: rgb(50, 171, 187);\n}\n.btls-board-area:not(.game-ended) .btls-board-one:not(.ships-hidden) > .btls-cell.ship:hover {\n    background-color: rgb(88, 202, 218);\n}\n.btls-board-area:not(.game-ended) .btls-board-two:not(.ships-hidden) > .btls-cell.ship,\n.btls-board-area.game-ended .btls-board-two:not(.ships-hidden) > .btls-cell.ship,\n.btls-board-area.game-ended .btls-board-two.ships-hidden > .btls-cell.ship {\n    background-color: rgb(50, 171, 187);\n}\n.btls-board-area:not(.game-ended) .btls-board-two:not(.ships-hidden) > .btls-cell.ship:hover {\n    background-color: rgb(88, 202, 218);\n}\n.btls-cell.attacked {\n    background-color: rgb(194, 76, 76);\n}\n.btls-board-area:not(.game-ended) .btls-cell.attacked:hover {\n    background-color: rgb(211, 101, 101);\n}\n.btls-cell.hit {\n    background-color: rgb(98, 212, 69);\n}\n.btls-board-area:not(.game-ended) .btls-cell.hit:hover {\n    background-color: rgb(124, 236, 96);\n}","",{version:3,sources:["webpack://./src/DOM/DOM-styles.css"],names:[],mappings:"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",sourcesContent:[":root {\n    --battleship-history-box-width: 8rem;\n    --battleship-board-size: 20rem;\n    --battleship-info-box-height: 4rem;\n    --battleship-place-ship-box-width: 8rem;\n}\n\n.btls-base {\n    display: grid;\n    grid-template-rows: repeat(3, auto); \n    grid-template-columns: repeat(3, auto); \n    border: 1px solid black;\n}\n\n.btls-history-box {\n    grid-area: 2 / 1 / 3 / 2;\n    width: var(--battleship-history-box-width, 10rem);\n    border: 1px solid #000;\n}\n\n.btls-title {\n    grid-area: 1 / 1 / 2 / -1;\n    font-size: 3rem;\n    text-align: center;\n}\n\n.btls-board-area {\n    grid-area: 2 / 2 / 3 / 3;\n    display: grid;\n    grid-template-rows:  auto var(--battleship-board-size, 24rem) auto var(--battleship-info-box-height, 3rem) auto var(--battleship-board-size, 24rem) auto;\n    grid-template-columns: auto var(--battleship-board-size, 24rem) var(--battleship-place-ship-box-width, 10rem);\n    padding: 0.5rem;\n}\n\n.btls-board-one,\n.btls-board-two {\n    display: grid;\n    grid-template-rows: repeat(10, auto);\n    grid-template-columns: repeat(10, auto);\n    padding: 0.5rem;\n    gap: 0.2rem;\n}\n\n.btls-axis-1-x,\n.btls-axis-1-y,\n.btls-axis-2-x,\n.btls-axis-2-y {\n    display: flex;\n    justify-content: space-around;\n    text-align: center;\n    vertical-align: center;\n}\n\n.btls-board-one {\n    grid-area: -3 / 2 / -2 / 3;\n}\n.btls-axis-1-x {\n    grid-area: -2 / 2 / -1 / 3;\n    padding: 0rem 0.5rem;\n}\n.btls-axis-1-y {\n    grid-area: -3 / 1 / -2 / 2;\n    flex-direction: column;\n    padding: 0.5rem 0rem;\n}\n.btls-board-two {\n    grid-area: 2 / 2 / 3 / 3;\n}\n.btls-axis-2-x {\n    grid-area: 1 / 2 / 2 / 3;\n    padding: 0rem 0.5rem;\n}\n.btls-axis-2-y {\n    grid-area: 2 / 1 / 3 / 2;\n    flex-direction: column;\n    padding: 0.5rem 0rem;\n}\n\n.btls-axis-no {\n    padding: 0rem;\n    margin: 0rem;\n}\n\n.btls-b1-id,\n.btls-b2-id {\n    font-size: 0.8rem;\n    text-align: center;\n    vertical-align: center;\n}\n\n.btls-b1-id {\n    grid-area: -4 / 2 / -3 / 3;\n}\n.btls-b2-id {\n    grid-area: 3 / 2 / 4 / 3;\n}\n\n.btls-b1-btns,\n.btls-b2-btns {\n    display: flex;\n    justify-content: center;\n    gap: 0.3rem;\n}\n.btls-b1-btns {\n    grid-area: -4 / 3 / -3 / 4;\n}\n.btls-b2-btns {\n    grid-area: 3 / 3 / 4 / 4;\n}\n\n.btls-b1-change-style-button,\n.btls-b2-change-style-button,\n.btls-b1-hide-ships-button,\n.btls-b2-hide-ships-button {\n    font-size: 0.5rem;\n    border-radius: 9999px;\n    outline: none;\n    border: none;\n    padding: 0.3rem 0.4rem;\n}\n\n.btls-b1-change-style-button,\n.btls-b2-change-style-button {\n    background-color: #5bd656;\n}\n.btls-b1-change-style-button:hover,\n.btls-b2-change-style-button:hover {\n    background-color: #6bf566;\n}\n.btls-b1-change-style-button:active,\n.btls-b2-change-style-button:active {\n    background-color: #31ac2c;\n}\n.btls-b1-hide-ships-button,\n.btls-b2-hide-ships-button {\n    background-color: #ecc825;\n}\n.btls-b1-hide-ships-button:hover,\n.btls-b2-hide-ships-button:hover {\n    background-color: #fcdc4e;\n}\n.btls-b1-hide-ships-button:active,\n.btls-b2-hide-ships-button:active {\n    background-color: #d4b216;\n}\n\n.btls-info-box {\n    grid-area: -5 / 2 / -4 / 3;\n    display: flex;\n    flex-direction: column;\n    place-content: center;\n    align-items: center;\n    text-align: center;\n    padding: 0.5rem;\n}\n\n.btls-b1-place-ship-box,\n.btls-b2-place-ship-box {\n    display: grid;\n    grid-template-rows: 1fr repeat(4, auto);\n    grid-template-columns: repeat(2, calc(50% - 0.1rem));\n    align-items: center;\n    width: calc(var(--battleship-place-ship-box-width, 10rem) - 0.2rem);\n    padding: 0.5rem 0rem;\n    gap: 0.4rem 0.2rem;\n}\n.btls-b1-place-ship-box {\n    grid-area: 6 / -2 / 7 / -1;\n}\n.btls-b2-place-ship-box {\n    grid-area: 2 / -2 / 3 / -1;\n}\n\n.btls-b1-place-ship-model,\n.btls-b2-place-ship-model {\n    grid-area: 1 / 1 / 2 / -1;\n    place-self: center;\n    width: 100%;\n    height: 100%;\n    gap: 0.2rem;\n}\n\n.btls-model-cell {\n    outline: 1px solid black;\n}\n\n.btls-b1-place-ship-size-label,\n.btls-b2-place-ship-size-label,\n.btls-b1-place-ship-x-coord-label,\n.btls-b2-place-ship-x-coord-label,\n.btls-b1-place-ship-y-coord-label,\n.btls-b2-place-ship-y-coord-label {\n    font-size: 0.8rem;\n    text-align: center;\n}\n.btls-b1-place-ship-size-label,\n.btls-b2-place-ship-size-label {\n    grid-area: 2 / 1 / 3 / 2;\n}\n.btls-b1-place-ship-x-coord-label,\n.btls-b2-place-ship-x-coord-label {\n    grid-area: 3 / 1 / 4 / 2;\n}\n.btls-b1-place-ship-y-coord-label,\n.btls-b2-place-ship-y-coord-label {\n    grid-area: 4 / 1 / 5 / 2;\n}\n\n.btls-b1-place-ship-size,\n.btls-b2-place-ship-size,\n.btls-b1-place-ship-x-coord,\n.btls-b2-place-ship-x-coord,\n.btls-b1-place-ship-y-coord,\n.btls-b2-place-ship-y-coord {\n    font-size: 1rem;\n    border-radius: 9999px;\n    padding: 0.1rem 0.3rem;\n    border: none;\n    outline: 1px solid black;\n}\n.btls-b1-place-ship-size,\n.btls-b2-place-ship-size {\n    grid-area: 2 / 2 / 3 / 3;\n}\n.btls-b1-place-ship-x-coord,\n.btls-b2-place-ship-x-coord {\n    grid-area: 3 / 2 / 4 / 3;\n}\n.btls-b1-place-ship-y-coord,\n.btls-b2-place-ship-y-coord {\n    grid-area: 4 / 2 / 5 / 3;\n}\n\n.btls-b1-place-ship-rotation,\n.btls-b2-place-ship-rotation,\n.btls-b1-place-ship,\n.btls-b2-place-ship {\n    font-size: 0.8rem;\n    border-radius: 9999px;\n    outline: none;\n    border: none;\n    padding: 0.3rem 0.1rem;\n}\n\n.btls-b1-place-ship-rotation,\n.btls-b2-place-ship-rotation {\n    grid-area: 5 / 1 / 6 / -1;\n    background-color: #fa8bde;\n}\n.btls-b1-place-ship-rotation:hover,\n.btls-b2-place-ship-rotation:hover {\n    background-color: #ffabea;\n}\n.btls-b1-place-ship-rotation:active,\n.btls-b2-place-ship-rotation:active {\n    background-color: #d64ab3;\n}\n\n.btls-b1-place-ship,\n.btls-b2-place-ship {\n    grid-area: 6 / 1 / 7 / -1;\n    background-color: #9b8afc;\n}\n.btls-b1-place-ship:hover,\n.btls-b2-place-ship:hover {\n    background-color: #b5a8ff;\n}\n.btls-b1-place-ship:active,\n.btls-b2-place-ship:active {\n    background-color: #7e68fc;\n}\n\n.btls-buttons {\n    grid-area: 3 / 1 / -1 / -1;\n    display: flex;\n    justify-content: center;\n    gap: 0.5rem;\n}\n\n.btls-start,\n.btls-reset {\n    font-size: 0.8rem;\n    border-radius: 9999px;\n    background-color: #fa8bde;\n    outline: none;\n    border: none;\n    padding: 0.5rem 0.8rem;\n    margin: 0.8rem 0rem;\n}\n.btls-start {\n    background-color: #60e654;\n}\n.btls-start:hover {\n    background-color: #80f775;\n}\n.btls-start:active {\n    background-color: #49d13d;\n}\n.btls-reset {\n    background-color: #eb6767;\n}\n.btls-reset:hover {\n    background-color: #eb7f7f;\n}\n.btls-reset:active {\n    background-color: #dd4e4e;\n}\n\n.btls-cell {\n    outline: 1px solid black;\n}\n.btls-board-area:not(.game-ended) .btls-cell:hover {\n    outline: 2px solid black;\n}\n\n.btls-cell.empty {\n    background-color: rgb(255, 255, 255);\n}\n.btls-board-area:not(.game-ended) .btls-cell.empty:hover {\n    background-color: #ececec;\n}\n.btls-board-area:not(.game-ended) .btls-cell.empty:active {\n    background-color: #d1d1d1;\n}\n.btls-board-area:not(.game-ended) .btls-board-one:not(.ships-hidden) > .btls-cell.ship,\n.btls-board-area.game-ended .btls-board-one:not(.ships-hidden) > .btls-cell.ship,\n.btls-board-area.game-ended .btls-board-one.ships-hidden > .btls-cell.ship {\n    background-color: rgb(50, 171, 187);\n}\n.btls-board-area:not(.game-ended) .btls-board-one:not(.ships-hidden) > .btls-cell.ship:hover {\n    background-color: rgb(88, 202, 218);\n}\n.btls-board-area:not(.game-ended) .btls-board-two:not(.ships-hidden) > .btls-cell.ship,\n.btls-board-area.game-ended .btls-board-two:not(.ships-hidden) > .btls-cell.ship,\n.btls-board-area.game-ended .btls-board-two.ships-hidden > .btls-cell.ship {\n    background-color: rgb(50, 171, 187);\n}\n.btls-board-area:not(.game-ended) .btls-board-two:not(.ships-hidden) > .btls-cell.ship:hover {\n    background-color: rgb(88, 202, 218);\n}\n.btls-cell.attacked {\n    background-color: rgb(194, 76, 76);\n}\n.btls-board-area:not(.game-ended) .btls-cell.attacked:hover {\n    background-color: rgb(211, 101, 101);\n}\n.btls-cell.hit {\n    background-color: rgb(98, 212, 69);\n}\n.btls-board-area:not(.game-ended) .btls-cell.hit:hover {\n    background-color: rgb(124, 236, 96);\n}"],sourceRoot:""}]);const s=o},28:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(537),a=n.n(r),l=n(645),o=n.n(l)()(a());o.push([e.id,":root {\n    font-size: 20px;\n}\n\n.no-select {\n    -webkit-touch-callout: none;    /* iOS Safari */\n    -webkit-user-select: none;      /* Safari */\n    -khtml-user-select: none;       /* Konqueror HTML */\n    -moz-user-select: none;         /* Old versions of Firefox */\n    -ms-user-select: none;          /* Internet Explorer/Edge */\n    user-select: none;              /* Non-prefixed version, currently\n                                       supported by Chrome, Edge, Opera and Firefox */\n}\n\nh1, h2, h3, h4, h5, h6 {\n    padding: 0px;\n    margin: 0px;\n}\n\nbody {\n    margin: 0;\n    min-width: 100vw;\n    min-height: 100vh;\n    display: grid;\n    justify-content: center;\n    align-content: center;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,eAAe;AACnB;;AAEA;IACI,2BAA2B,KAAK,eAAe;IAC/C,yBAAyB,OAAO,WAAW;IAC3C,wBAAwB,QAAQ,mBAAmB;IACnD,sBAAsB,UAAU,4BAA4B;IAC5D,qBAAqB,WAAW,2BAA2B;IAC3D,iBAAiB,eAAe;qFACiD;AACrF;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,SAAS;IACT,gBAAgB;IAChB,iBAAiB;IACjB,aAAa;IACb,uBAAuB;IACvB,qBAAqB;AACzB",sourcesContent:[":root {\n    font-size: 20px;\n}\n\n.no-select {\n    -webkit-touch-callout: none;    /* iOS Safari */\n    -webkit-user-select: none;      /* Safari */\n    -khtml-user-select: none;       /* Konqueror HTML */\n    -moz-user-select: none;         /* Old versions of Firefox */\n    -ms-user-select: none;          /* Internet Explorer/Edge */\n    user-select: none;              /* Non-prefixed version, currently\n                                       supported by Chrome, Edge, Opera and Firefox */\n}\n\nh1, h2, h3, h4, h5, h6 {\n    padding: 0px;\n    margin: 0px;\n}\n\nbody {\n    margin: 0;\n    min-width: 100vw;\n    min-height: 100vh;\n    display: grid;\n    justify-content: center;\n    align-content: center;\n}"],sourceRoot:""}]);const s=o},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,a,l){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(r)for(var s=0;s<this.length;s++){var i=this[s][0];null!=i&&(o[i]=!0)}for(var b=0;b<e.length;b++){var A=[].concat(e[b]);r&&o[A[0]]||(void 0!==l&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=l),n&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=n):A[2]=n),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),t.push(A))}},t}},537:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),l="/*# ".concat(a," */");return[t].concat([l]).join("\n")}return[t].join("\n")}},798:function(e,t,n){e=n.nmd(e),function(n,r){"use strict";var a={};n.PubSub?(a=n.PubSub,console.warn("PubSub already loaded, using existing version")):(n.PubSub=a,function(e){var t={},n=-1,r="*";function a(e,t,n){try{e(t,n)}catch(e){setTimeout(function(e){return function(){throw e}}(e),0)}}function l(e,t,n){e(t,n)}function o(e,n,r,o){var s,i=t[n],b=o?l:a;if(Object.prototype.hasOwnProperty.call(t,n))for(s in i)Object.prototype.hasOwnProperty.call(i,s)&&b(i[s],e,r)}function s(e){var n=String(e);return Boolean(Object.prototype.hasOwnProperty.call(t,n)&&function(e){var t;for(t in e)if(Object.prototype.hasOwnProperty.call(e,t))return!0;return!1}(t[n]))}function i(e,t,n,a){var l=function(e,t,n){return function(){var a=String(e),l=a.lastIndexOf(".");for(o(e,e,t,n);-1!==l;)l=(a=a.substr(0,l)).lastIndexOf("."),o(e,a,t,n);o(e,r,t,n)}}(e="symbol"==typeof e?e.toString():e,t,a);return!!function(e){for(var t=String(e),n=s(t)||s(r),a=t.lastIndexOf(".");!n&&-1!==a;)a=(t=t.substr(0,a)).lastIndexOf("."),n=s(t);return n}(e)&&(!0===n?l():setTimeout(l,0),!0)}e.publish=function(t,n){return i(t,n,!1,e.immediateExceptions)},e.publishSync=function(t,n){return i(t,n,!0,e.immediateExceptions)},e.subscribe=function(e,r){if("function"!=typeof r)return!1;e="symbol"==typeof e?e.toString():e,Object.prototype.hasOwnProperty.call(t,e)||(t[e]={});var a="uid_"+String(++n);return t[e][a]=r,a},e.subscribeAll=function(t){return e.subscribe(r,t)},e.subscribeOnce=function(t,n){var r=e.subscribe(t,(function(){e.unsubscribe(r),n.apply(this,arguments)}));return e},e.clearAllSubscriptions=function(){t={}},e.clearSubscriptions=function(e){var n;for(n in t)Object.prototype.hasOwnProperty.call(t,n)&&0===n.indexOf(e)&&delete t[n]},e.countSubscriptions=function(e){var n,r,a=0;for(n in t)if(Object.prototype.hasOwnProperty.call(t,n)&&0===n.indexOf(e)){for(r in t[n])a++;break}return a},e.getSubscriptions=function(e){var n,r=[];for(n in t)Object.prototype.hasOwnProperty.call(t,n)&&0===n.indexOf(e)&&r.push(n);return r},e.unsubscribe=function(n){var r,a,l,o="string"==typeof n&&(Object.prototype.hasOwnProperty.call(t,n)||function(e){var n;for(n in t)if(Object.prototype.hasOwnProperty.call(t,n)&&0===n.indexOf(e))return!0;return!1}(n)),s=!o&&"string"==typeof n,i="function"==typeof n,b=!1;if(!o){for(r in t)if(Object.prototype.hasOwnProperty.call(t,r)){if(a=t[r],s&&a[n]){delete a[n],b=n;break}if(i)for(l in a)Object.prototype.hasOwnProperty.call(a,l)&&a[l]===n&&(delete a[l],b=!0)}return b}e.clearSubscriptions(n)}}(a)),void 0!==e&&e.exports&&(t=e.exports=a),t.PubSub=a,e.exports=t=a}("object"==typeof window&&window||this)},379:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var l={},o=[],s=0;s<e.length;s++){var i=e[s],b=r.base?i[0]+r.base:i[0],A=l[b]||0,d="".concat(b," ").concat(A);l[b]=A+1;var c=n(d),p={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==c)t[c].references++,t[c].updater(p);else{var u=a(p,r);r.byIndex=s,t.splice(s,0,{identifier:d,updater:u,references:1})}o.push(d)}return o}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var l=r(e=e||[],a=a||{});return function(e){e=e||[];for(var o=0;o<l.length;o++){var s=n(l[o]);t[s].references--}for(var i=r(e,a),b=0;b<l.length;b++){var A=n(l[b]);0===t[A].references&&(t[A].updater(),t.splice(A,1))}l=i}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var l=n.sourceMap;l&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(l))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var l=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(l.exports,l,l.exports,n),l.loaded=!0,l.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.nc=void 0,(()=>{"use strict";var e=n(798),t=n.n(e);const r=()=>{let e="Manual";const n=(e,t)=>{for(let n=0;n<t.length;n++)if(e[0]===t[n][0]&&e[1]===t[n][1])return n;return-1},r=(e,t)=>t[0]*e+t[1];return{setStyle:t=>{"Manual"!==t&&"Computer"!==t||(e=t)},getStyle:()=>e,takeComputerTurn:(e,a)=>{const l=e.previousHits(),o=e.previousSinks(),s=0===o.length?null:o[o.length-1],i=e.observeBoard();for(let r=l.length-1;r>=0;r--){const o=l[r];if(null===s||Array.isArray(s)&&-1===n(o,s)){const i=[];let b=null;for(let t=r-1;t>=0;t--){const r=l[t];if((null===s||Array.isArray(s)&&-1===n(r,s))&&(o[0]!==r[0]?(b=0,null!==e.getCellStateAt([r[0]-1,r[1]])&&e.getCellStateAt([r[0]-1,r[1]])<2&&i.push([r[0]-1,r[1]]),null!==e.getCellStateAt([r[0]+1,r[1]])&&e.getCellStateAt([r[0]+1,r[1]])<2&&i.push([r[0]+1,r[1]])):o[1]!==r[1]&&(b=1,null!==e.getCellStateAt([r[0],r[1]-1])&&e.getCellStateAt([r[0],r[1]-1])<2&&i.push([r[0],r[1]-1]),null!==e.getCellStateAt([r[0],r[1]+1])&&e.getCellStateAt([r[0],r[1]+1])<2&&i.push([r[0],r[1]+1])),i.length>0))break;if(Array.isArray(s)&&n(r,s)>-1)break}if((null===b||0===b)&&null!==e.getCellStateAt([o[0]-1,o[1]])&&e.getCellStateAt([o[0]-1,o[1]])<2&&i.push([o[0]-1,o[1]]),(null===b||1===b)&&null!==e.getCellStateAt([o[0],o[1]-1])&&e.getCellStateAt([o[0],o[1]-1])<2&&i.push([o[0],o[1]-1]),(null===b||0===b)&&null!==e.getCellStateAt([o[0]+1,o[1]])&&e.getCellStateAt([o[0]+1,o[1]])<2&&i.push([o[0]+1,o[1]]),(null===b||1===b)&&null!==e.getCellStateAt([o[0],o[1]+1])&&e.getCellStateAt([o[0],o[1]+1])<2&&i.push([o[0],o[1]+1]),0===i.length)continue;const A=Math.floor(Math.random()*i.length);return e.receiveAttack(i[A]),void t().publish("BATTLESHIP-COMPUTER-ATTACKED-POSITION",[i[A],a])}break}const b=new Set;for(let e=0;e<i.length;e++)for(let t=0;t<i[e].length;t++)if(i[e][t]<2){let n=r(i.length,[t,e]);b.add(n)}for(let e=0;e<o.length;e++)for(let t=0;t<o[e].length;t++){let n=r(i.length,o[e][t]);b.has(n)&&b.delete(n)}let A=Array.from(b),d=A[Math.floor(Math.random()*A.length)],c=(p=i.length,u=d,[Math.floor(u/p),u-Math.floor(u/p)*p]);var p,u;e.receiveAttack(c),t().publish("BATTLESHIP-COMPUTER-ATTACKED-POSITION",[c,a])}}},a=e=>{let t=e,n=!1,r=[],a=[],l=[];const o=()=>{let e=[];for(let n=0;n<Math.max(1,t);n++){e.push([]);for(let r=0;r<Math.max(1,t);r++)e[n].push(0)}return e};let s=o(),i=null;const b=(e,t,n)=>{if(u())return null;if(g()>=6)return"max";if(A(s,e,t,n)){const r=d(e,t,n);if(n)for(let e=r[0][1];e<=r[1][1];e++)s[e][t[0]]=1;else for(let e=r[0][0];e<=r[1][0];e++)s[t[1]][e]=1}},A=(e,t,n,r)=>{if(!Number.isInteger(t)||t<1||t>e.length)return!1;if(!p(n))return!1;if("boolean"!=typeof r)return!1;const a=d(t,n,r);if(a[0][0]<0||a[0][0]>=e.length||a[0][1]<0||a[0][1]>=e.length||a[1][0]<0||a[1][0]>=e.length||a[1][1]<0||a[1][1]>=e.length)return!1;for(let t=a[0][0]-1;t<=a[1][0]+1;t++)if(-1!==t&&t!==e.length)for(let n=a[0][1]-1;n<=a[1][1]+1;n++)if(-1!==n&&n!==e.length&&0!==e[n][t])return!1;return!0},d=(e,t,n)=>{const r=Math.abs(Math.floor((e-1)/2)),a=Math.abs(Math.ceil((e-1)/2));return n?[[t[0],t[1]-r],[t[0],t[1]+a]]:[[t[0]-r,t[1]],[t[0]+a,t[1]]]},c=(e,t)=>{if(0!==e[t[1]][t[0]]){const n=[],r=t=>{n.push(t),e[t[1]][t[0]]=0,t[1]>0&&0!==e[t[1]-1][t[0]]&&r([t[0],t[1]-1]),t[0]>0&&0!==e[t[1]][t[0]-1]&&r([t[0]-1,t[1]]),t[1]<e.length-1&&0!==e[t[1]+1][t[0]]&&r([t[0],t[1]+1]),t[0]<e.length-1&&0!==e[t[1]][t[0]+1]&&r([t[0]+1,t[1]])};return r(t),[e,n]}return null},p=e=>!!(Array.isArray(e)&&2===e.length&&Number.isInteger(e[0])&&e[0]>=0&&e[0]<s.length&&Number.isInteger(e[1])&&e[1]>=0&&e[1]<s.length),u=()=>n,h=()=>JSON.parse(JSON.stringify(s)),g=()=>{let e,t=0;e=n?JSON.parse(JSON.stringify(i)):h();for(let n=0;n<e.length;n++)for(let r=0;r<e[n].length;r++){const a=c(e,[r,n]);a&&a[1].length>0&&t++}return t};return{startGame:()=>{n=!0,i=h()},resetBoard:()=>{s=o(),i=null,n=!1,r=[],a=[],l=[]},randomiseBoard:()=>{const e=Math.floor(2*Math.random()+1)+4;for(let t=0;t<e;t++){const e=2,t=6;let n=Math.floor(Math.random()*(t-e+1))+e;const r=0!==Math.floor(2*Math.random()),a=[];for(;0===a.length&&n>=e;){for(let e=0;e<s.length;e++)for(let t=0;t<s[0].length;t++)A(s,n,[t,e],r)&&a.push([t,e]);0===a.length&&n--}const l=Math.floor(Math.random()*a.length);b(n,a[l],r)}},placeShip:b,moveShip:(e,t,n)=>{if(u())return null;if(!p(e))return;if(!p(t))return;if("boolean"!=typeof n)return!1;let r=h();const a=c(r,e);if(!a)return;r=a[0];const l=a[1];let o=!1;l.length>2&&l[0][1]!==l[1][1]&&(o=!0);const i=Math.ceil((l.length-1)/2);let b=[];if(o?l.sort(((e,t)=>e[1]-t[1])):l.sort(((e,t)=>e[0]-t[0])),b=l[i],n&&(o=!o),n?(t[0]+=b[1]-e[1],t[1]+=b[0]-e[0]):(t[0]+=b[0]-e[0],t[1]+=b[1]-e[1]),A(r,l.length,t,o)){s=r;for(let e=0;e<l.length;e++)o?s[t[1]+(e-i)][t[0]]=1:s[t[1]][t[0]+(e-i)]=1}},deleteShip:e=>{if(u())return null;p(e)&&c(s,e)},receiveAttack:e=>{if(!u())return!1;if(!p(e))return!1;if(s[e[1]][e[0]]<2){1===s[e[1]][e[0]]?(s[e[1]][e[0]]=3,a.push(e)):s[e[1]][e[0]]=2,r.push(e);let t=JSON.parse(JSON.stringify(i));const n=c(t,e);if(n){let e=!0;for(let t=0;t<n[1].length;t++)if(1===s[n[1][t][1]][n[1][t][0]]){e=!1;break}e&&l.push(n[1])}return!0}},getCellStateAt:e=>p(e)?s[e[1]][e[0]]:null,checkDefeat:()=>{if(!u())return!1;for(let e=0;e<s.length;e++)for(let t=0;t<s[e].length;t++)if(1===s[e][t])return!1;return!0},isGameStarted:u,observeBoard:h,totalNumberOfShips:g,remainingNumberOfShips:()=>n?g()-l.length:g(),previousAttacks:()=>JSON.parse(JSON.stringify(r)),previousHits:()=>JSON.parse(JSON.stringify(a)),previousSinks:()=>JSON.parse(JSON.stringify(l))}};var l=n(379),o=n.n(l),s=n(795),i=n.n(s),b=n(569),A=n.n(b),d=n(565),c=n.n(d),p=n(216),u=n.n(p),h=n(589),g=n.n(h),m=n(28),C={};C.styleTagTransform=g(),C.setAttributes=c(),C.insert=A().bind(null,"head"),C.domAPI=i(),C.insertStyleElement=u(),o()(m.Z,C),m.Z&&m.Z.locals&&m.Z.locals;var B=n(786),f={};f.styleTagTransform=g(),f.setAttributes=c(),f.insert=A().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=u(),o()(B.Z,f),B.Z&&B.Z.locals&&B.Z.locals,(()=>{const e=(()=>{let e=!1,t=!1,n=0,l=[r(),r()];l[1].setStyle("Computer");let o=[a(10),a(10)];const s=()=>{t=!0,e=!1},i=async()=>{if(!e||t)return null;await setTimeout((()=>{const e=(n+1)%2,t=o[e];return l[n].takeComputerTurn(t,e),t.checkDefeat()?(s(),!0):(b(),!0)}),1600)||i()},b=()=>{n=(n+1)%2,"Computer"===l[n].getStyle()&&i()};return{startGame:()=>{if(e||t)return null;e=!0,t=!1,"Computer"===l[0].getStyle()&&o[0].randomiseBoard(),"Computer"===l[1].getStyle()&&o[1].randomiseBoard(),o[0].startGame(),o[1].startGame(),n=Math.floor(2*Math.random()),"Computer"===l[n].getStyle()&&i()},endGame:s,resetGame:()=>{e=!1,t=!1,o[0].resetBoard(),o[1].resetBoard()},manualAttack:(r,a)=>{if(!(Number.isInteger(r)&&r>=0&&r<=1))return null;if(!e||t)return null;if("Computer"===l[n].getStyle())return null;if(n===r)return null;const i=o[(n+1)%2];if(i.getCellStateAt(a)>=2)return null;const A=i.previousAttacks().length;if(i.receiveAttack(a),A!==i.previousAttacks().length){if(i.checkDefeat())return void s();b()}},isGameStarted:()=>e,isGameEnded:()=>t,getPlayers:()=>l,getGameboards:()=>o,changeTurn:b,getTurn:()=>n}})();let n=3,l=!1,o=[0,0],s=!1,i=3,b=!1,A=[0,0],d=!1;const c=(e,t,n)=>{const r=document.createElement(e);return r instanceof HTMLUnknownElement?null:(Array.isArray(t)&&t.forEach((e=>{"string"==typeof e&&r.classList.add(e)})),n instanceof HTMLElement&&n.appendChild(r),r)},p={base:c("div",["btls-base"],document.body),title:null,boardArea:null,board1:null,b1XAxis:null,b1YAxis:null,b1ID:null,b1Buttons:null,b1ChangeStyleButton:null,b1HideShipsButton:null,b1PlaceShipBox:null,b1PlaceShipModel:null,b1PlaceShipSizeInput:null,b1PlaceShipRotationButton:null,b1PlaceShipXCoordInput:null,b1PlaceShipYCoordInput:null,b1PlaceShipPlaceButton:null,infoBox:null,board2:null,b2XAxis:null,b2YAxis:null,b2ID:null,b2Buttons:null,b2ChangeStyleButton:null,b2HideShipsButton:null,b2PlaceShipBox:null,b2PlaceShipModel:null,b2PlaceShipSizeInput:null,b2PlaceShipRotationButton:null,b2PlaceShipXCoordInput:null,b2PlaceShipYCoordInput:null,b2PlaceShipPlaceButton:null,buttons:null,startButton:null,resetButton:null},u=()=>{const t=e.getGameboards(),n=e.getPlayers();t[0].totalNumberOfShips()<1&&"Manual"===n[0].getStyle()||t[1].totalNumberOfShips()<1&&"Manual"===n[1].getStyle()?g("Please ensure all Manual players have at least one ship before starting the game"):(e.startGame(),e.isGameStarted()&&(p.boardArea.classList.remove("game-ended"),g(`Here we go! It's Player ${e.getTurn()+1} to move first.`),"Computer"===n[0].getStyle()&&B(e.getGameboards()[0],0,p.board1,!0),"Computer"===n[1].getStyle()&&B(e.getGameboards()[1],1,p.board2,!0)))},h=()=>{e.resetGame(),B(e.getGameboards()[0],0,p.board1,!1),B(e.getGameboards()[1],1,p.board2,!1),p.boardArea.classList.remove("game-ended"),g("Welcome to Battleship!")},g=e=>{p.infoBox.textContent=e},m=e=>e instanceof Element?c("div",["btls-cell"],e):null,C=(e,t)=>{switch(e.classList.remove("ship","hit","empty"),t){case 1:e.classList.add("ship");break;case 2:e.classList.add("attacked");break;case 3:e.classList.add("hit");break;default:e.classList.add("empty")}},B=(e,t,n,r)=>{if(!j(e))return null;if(!(Number.isInteger(t)&&t>=0&&t<=1))return null;if(!(n instanceof HTMLElement))return null;n.replaceChildren();const a=e.observeBoard();for(let e=0;e<a.length;e++)for(let l=0;l<a[e].length;l++){const o=m(n);C(o,r&&1===a[e][l]?0:a[e][l]),o.addEventListener("click",(()=>{T(o,[l,e],t)}))}},f=(t,n,r,a)=>{const l=e.getGameboards()[n].observeBoard();if(0===r)for(let e=0;e<l.length;e++)c("div",["btls-axis-no"],t).textContent=e;else for(let e=0;e<l[0].length;e++)c("div",["btls-axis-no"],t).textContent=e;a.appendChild(t)},y=(t,n)=>{let r,a,l;l=t+1,r=c("button",[`btls-b${l}-change-style-button`],n),r.textContent="Change Style",r.addEventListener("click",(()=>{E(t)})),a=c("button",[`btls-b${l}-hide-ships-button`],n),a.addEventListener("click",(()=>{O(t)})),0===t?(p.b1ChangeStyleButton=r,p.b1HideShipsButton=a):(p.b2ChangeStyleButton=r,p.b2HideShipsButton=a),"Computer"===e.getPlayers()[t].getStyle()&&O(t),M(t)},I=(e,t)=>{const r=e+1;let a=c("div",[`btls-b${r}-place-ship-box`],t);0===e?p.b1PlaceShipBox=a:p.b2PlaceShipBox=a;let o=c("div",[`btls-b${r}-place-ship-model`],a);o.style.display="grid",0===e?p.b1PlaceShipModel=o:p.b2PlaceShipModel=o,v(e,a),x(e,0,a),x(e,1,a),S(e,a),k(e,a),w(0===e?p.b1PlaceShipModel:p.b2PlaceShipModel,0===e?n:i,0===e?l:b)},v=(e,t)=>{let r,a,o;o=e+1,r=c("label",[`btls-b${o}-place-ship-size-label`],t),r.textContent="Size",r.setAttribute("for",`btls-b${o}-place-ship-size`),a=c("input",[`btls-b${o}-place-ship-size`],t),a.setAttribute("id",`btls-b${o}-place-ship-size`),a.setAttribute("type","number"),a.value=0===e?n:i,a.addEventListener("input",(()=>{a.value=Math.min(10,Math.max(1,a.value));const t=parseInt(a.value);0===e?n=t:i=t,w(0===e?p.b1PlaceShipModel:p.b2PlaceShipModel,0===e?n:i,0===e?l:b)})),0===e?p.b1PlaceShipSizeInput=a:p.b2PlaceShipSizeInput=a},x=(e,t,n)=>{let r,a,l,s;l=e+1,s=0===t?"x":"y",r=c("label",[`btls-b${l}-place-ship-${s}-coord-label`],n),r.textContent=`${s.toUpperCase()}-Coord: `,r.setAttribute("for",`btls-b${l}-place-ship-${s}-coord`),a=c("input",[`btls-b${l}-place-ship-${s}-coord`],n),a.setAttribute("id",`btls-b${l}-place-ship-${s}-coord`),a.setAttribute("type","number"),a.value=0===t?0===e?o[0]:A[0]:0===e?o[1]:A[1],a.addEventListener("input",(()=>{a.value=Math.min(9,Math.max(0,a.value));const n=parseInt(a.value);0===t?0===e?o[0]=n:A[0]=n:0===e?o[1]=n:A[1]=n})),0===t?0===e?p.b1PlaceShipXCoordInput=a:p.b2PlaceShipXCoordInput=a:0===e?p.b1PlaceShipYCoordInput=a:p.b2PlaceShipYCoordInput=a},S=(e,t)=>{let r,a;a=e+1,r=c("button",[`btls-b${a}-place-ship-rotation`],t),r.textContent="Rotate Ship",r.addEventListener("click",(()=>{0===e?l=!l:b=!b,w(0===e?p.b1PlaceShipModel:p.b2PlaceShipModel,0===e?n:i,0===e?l:b)})),0===e?p.b1PlaceShipRotationButton=r:p.b2PlaceShipRotationButton=r},k=(e,t)=>{let n,r;r=e+1,n=c("button",[`btls-b${r}-place-ship`],t),n.textContent="Place Ship",n.addEventListener("click",(()=>{z(e)})),0===e?p.b1PlaceShipPlaceButton=n:p.b2PlaceShipPlaceButton=n},w=(e,t,n)=>{e.replaceChildren();for(let n=0;n<t;n++)c("div",["btls-model-cell"],e);n?(e.style["grid-template-rows"]=`repeat(${t}, auto)`,e.style["grid-template-columns"]="auto",e.style.width="10%",e.style.height=10*t+"%"):(e.style["grid-template-rows"]="auto",e.style["grid-template-columns"]=`repeat(${t}, auto)`,e.style.width=10*t+"%",e.style.height="10%")},E=t=>{if(e.isGameStarted()||e.isGameEnded())return;const n=e.getPlayers(),r="Manual"===n[t].getStyle()?"Computer":"Manual";n[t].setStyle(r),"Computer"===r&&(O(t),e.getGameboards()[t].resetBoard(),B(e.getGameboards()[t],t,0===t?p.board1:p.board2,!0)),P(t)},P=t=>{const n=e.getPlayers();0===t?p.b1ID.textContent=`Player One: ${n[t].getStyle()}`:p.b2ID.textContent=`Player Two: ${n[t].getStyle()}`},O=t=>{const n=0===t?p.board1:p.board2;"Computer"===e.getPlayers()[t].getStyle()?(n.classList.add("ships-hidden"),0===t?s=!0:d=!0):n.classList.contains("ships-hidden")?(n.classList.remove("ships-hidden"),0===t?s=!1:d=!1):(n.classList.add("ships-hidden"),0===t?s=!0:d=!0),M(t)},M=e=>{const t=0===e?s:d;(0===e?p.b1HideShipsButton:p.b2HideShipsButton).textContent=t?"Show Ships":"Hide Ships"},z=t=>{"Computer"!==e.getPlayers()[t].getStyle()&&(e.isGameStarted()||e.isGameEnded()||("max"===e.getGameboards()[t].placeShip(0===t?n:i,0===t?o:A,0===t?l:b)?g(`Player ${t+1} cannot place any more ships.`):0===t?B(e.getGameboards()[0],0,p.board1,!1):B(e.getGameboards()[1],1,p.board2,!1)))},T=(t,n,r)=>{e.isGameStarted()&&!e.isGameEnded()&&null!==e.manualAttack(r,n)&&G(t,n,r)};t().subscribe("BATTLESHIP-COMPUTER-ATTACKED-POSITION",((e,t)=>{let[...n]=t;const r=n[0],a=n[1],l=0===a?p.board1.children[10*r[1]+r[0]]:p.board2.children[10*r[1]+r[0]];G(l,r,a)}));const G=(t,n,r)=>{let a,l;l=e.getGameboards()[r],a=l.getCellStateAt(n),C(t,a),g(`Player ${(e.getTurn()+1)%2+1} attacks position [${n[0]}, ${n[1]}]. It is ${3===a?"":"not "} a successful hit. It's Player ${e.getTurn()+1}'s move.`),e.isGameEnded()&&(B(e.getGameboards()[0],0,p.board1,!1),B(e.getGameboards()[1],1,p.board2,!1),p.boardArea.classList.add("game-ended"),g(`The game has been won! Player ${e.getTurn()+1} is the winner!`))},j=e=>null===e||"object"!=typeof e?null:!!Object.hasOwn(e,"observeBoard")||null;return{ele:p,game:e,displayGame:()=>{p.base.remove(),p.base=c("div",["btls-base"],document.body),p.base=c("div",["btls-base"],document.body),p.title=c("div",["btls-title"],p.base),p.boardArea=c("div",["btls-board-area"],p.base),p.board2=c("div",["btls-board-two"],p.boardArea),p.b2XAxis=c("div",["btls-axis-2-x"],p.boardArea),p.b2YAxis=c("div",["btls-axis-2-y"],p.boardArea),p.b2Buttons=c("div",["btls-b2-btns"],p.boardArea),p.b2ID=c("div",["btls-b2-id"],p.boardArea),p.infoBox=c("div",["btls-info-box"],p.boardArea),p.b1ID=c("div",["btls-b1-id"],p.boardArea),p.board1=c("div",["btls-board-one"],p.boardArea),p.b1XAxis=c("div",["btls-axis-1-x"],p.boardArea),p.b1YAxis=c("div",["btls-axis-1-y"],p.boardArea),p.b1Buttons=c("div",["btls-b1-btns"],p.boardArea),B(e.getGameboards()[0],0,p.board1,!1),B(e.getGameboards()[1],1,p.board2,!1),f(p.b1XAxis,0,0,p.boardArea),f(p.b1YAxis,0,1,p.boardArea),f(p.b2XAxis,1,0,p.boardArea),f(p.b2YAxis,1,1,p.boardArea),p.title.textContent="BATTLESHIP",P(0),P(1),g("Welcome to Battleship!"),y(1,p.b2Buttons),y(0,p.b1Buttons),p.buttons=c("div",["btls-buttons"],p.base),p.startButton=c("button",["btls-start"],p.buttons),p.startButton.addEventListener("click",u),p.resetButton=c("button",["btls-reset"],p.buttons),p.resetButton.addEventListener("click",h),p.startButton.textContent="Start Game",p.resetButton.textContent="Reset Game",I(0,p.boardArea),I(1,p.boardArea)},createElement:c,createCell:m,createBoard:B}})().displayGame()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,