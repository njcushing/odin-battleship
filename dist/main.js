(()=>{"use strict";var e={786:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(537),a=t.n(r),o=t(645),s=t.n(o)()(a());s.push([e.id,":root {\n    --battleship-board-width: 40vw;\n}\n\n.btls-base {\n    border: 1px solid black;\n}\n\n.btls-board-area {\n    display: grid;\n    grid-template-rows: repeat(4, auto);\n    grid-template-columns: repeat(2, auto);\n    border: 1px solid black;\n}\n\n.btls-board-one,\n.btls-board-two {\n    display: grid;\n    grid-template-rows: repeat(10, auto);\n    grid-template-columns: repeat(10, auto);\n    width: 20rem;\n    height: 20rem;\n    padding: 0.5rem;\n    gap: 0.12rem;\n}\n\n.btls-axis-1-x,\n.btls-axis-1-y,\n.btls-axis-2-x,\n.btls-axis-2-y {\n    display: flex;\n    justify-content: space-around;\n    text-align: center;\n    vertical-align: center;\n    padding: 0.5rem;\n}\n\n.btls-board-one {\n    grid-area: -3 / -2 / -2 / -1;\n}\n.btls-axis-1-x {\n    grid-area: -2 / -2 / -1 / -1;\n}\n.btls-axis-1-y {\n    grid-area: -3 / 1 / -2 / 2;\n    flex-direction: column;\n}\n.btls-board-two {\n    grid-area: 2 / -2 / 3 / -1;\n}\n.btls-axis-2-x {\n    grid-area: 1 / -2 / 2 / -1;\n}\n.btls-axis-2-y {\n    grid-area: 2 / 1 / 3 / 2;\n    flex-direction: column;\n}\n\n.btls-cell {\n    border: 1px solid black;\n}\n.btls-cell:hover {\n    background-color: #ececec;\n}\n.btls-cell:active {\n    background-color: #e2e2e2;\n}\n\n.btls-cell .empty {\n    background-color: rgb(255, 255, 255);\n}\n.btls-cell .ship {\n    background-color: rgb(50, 171, 187);\n}\n.btls-cell.hit {\n    background-color: rgb(184, 112, 112);\n}","",{version:3,sources:["webpack://./src/DOM/DOM-styles.css"],names:[],mappings:"AAAA;IACI,8BAA8B;AAClC;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,mCAAmC;IACnC,sCAAsC;IACtC,uBAAuB;AAC3B;;AAEA;;IAEI,aAAa;IACb,oCAAoC;IACpC,uCAAuC;IACvC,YAAY;IACZ,aAAa;IACb,eAAe;IACf,YAAY;AAChB;;AAEA;;;;IAII,aAAa;IACb,6BAA6B;IAC7B,kBAAkB;IAClB,sBAAsB;IACtB,eAAe;AACnB;;AAEA;IACI,4BAA4B;AAChC;AACA;IACI,4BAA4B;AAChC;AACA;IACI,0BAA0B;IAC1B,sBAAsB;AAC1B;AACA;IACI,0BAA0B;AAC9B;AACA;IACI,0BAA0B;AAC9B;AACA;IACI,wBAAwB;IACxB,sBAAsB;AAC1B;;AAEA;IACI,uBAAuB;AAC3B;AACA;IACI,yBAAyB;AAC7B;AACA;IACI,yBAAyB;AAC7B;;AAEA;IACI,oCAAoC;AACxC;AACA;IACI,mCAAmC;AACvC;AACA;IACI,oCAAoC;AACxC",sourcesContent:[":root {\n    --battleship-board-width: 40vw;\n}\n\n.btls-base {\n    border: 1px solid black;\n}\n\n.btls-board-area {\n    display: grid;\n    grid-template-rows: repeat(4, auto);\n    grid-template-columns: repeat(2, auto);\n    border: 1px solid black;\n}\n\n.btls-board-one,\n.btls-board-two {\n    display: grid;\n    grid-template-rows: repeat(10, auto);\n    grid-template-columns: repeat(10, auto);\n    width: 20rem;\n    height: 20rem;\n    padding: 0.5rem;\n    gap: 0.12rem;\n}\n\n.btls-axis-1-x,\n.btls-axis-1-y,\n.btls-axis-2-x,\n.btls-axis-2-y {\n    display: flex;\n    justify-content: space-around;\n    text-align: center;\n    vertical-align: center;\n    padding: 0.5rem;\n}\n\n.btls-board-one {\n    grid-area: -3 / -2 / -2 / -1;\n}\n.btls-axis-1-x {\n    grid-area: -2 / -2 / -1 / -1;\n}\n.btls-axis-1-y {\n    grid-area: -3 / 1 / -2 / 2;\n    flex-direction: column;\n}\n.btls-board-two {\n    grid-area: 2 / -2 / 3 / -1;\n}\n.btls-axis-2-x {\n    grid-area: 1 / -2 / 2 / -1;\n}\n.btls-axis-2-y {\n    grid-area: 2 / 1 / 3 / 2;\n    flex-direction: column;\n}\n\n.btls-cell {\n    border: 1px solid black;\n}\n.btls-cell:hover {\n    background-color: #ececec;\n}\n.btls-cell:active {\n    background-color: #e2e2e2;\n}\n\n.btls-cell .empty {\n    background-color: rgb(255, 255, 255);\n}\n.btls-cell .ship {\n    background-color: rgb(50, 171, 187);\n}\n.btls-cell.hit {\n    background-color: rgb(184, 112, 112);\n}"],sourceRoot:""}]);const l=s},28:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(537),a=t.n(r),o=t(645),s=t.n(o)()(a());s.push([e.id,":root {\n    font-size: 20px;\n}\n\n.no-select {\n    -webkit-touch-callout: none;    /* iOS Safari */\n    -webkit-user-select: none;      /* Safari */\n    -khtml-user-select: none;       /* Konqueror HTML */\n    -moz-user-select: none;         /* Old versions of Firefox */\n    -ms-user-select: none;          /* Internet Explorer/Edge */\n    user-select: none;              /* Non-prefixed version, currently\n                                       supported by Chrome, Edge, Opera and Firefox */\n}\n\nh1, h2, h3, h4, h5, h6 {\n    padding: 0px;\n    margin: 0px;\n}\n\nbody {\n    margin: 0;\n    min-width: 100vw;\n    min-height: 100vh;\n    display: grid;\n    justify-content: center;\n    align-content: center;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,eAAe;AACnB;;AAEA;IACI,2BAA2B,KAAK,eAAe;IAC/C,yBAAyB,OAAO,WAAW;IAC3C,wBAAwB,QAAQ,mBAAmB;IACnD,sBAAsB,UAAU,4BAA4B;IAC5D,qBAAqB,WAAW,2BAA2B;IAC3D,iBAAiB,eAAe;qFACiD;AACrF;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,SAAS;IACT,gBAAgB;IAChB,iBAAiB;IACjB,aAAa;IACb,uBAAuB;IACvB,qBAAqB;AACzB",sourcesContent:[":root {\n    font-size: 20px;\n}\n\n.no-select {\n    -webkit-touch-callout: none;    /* iOS Safari */\n    -webkit-user-select: none;      /* Safari */\n    -khtml-user-select: none;       /* Konqueror HTML */\n    -moz-user-select: none;         /* Old versions of Firefox */\n    -ms-user-select: none;          /* Internet Explorer/Edge */\n    user-select: none;              /* Non-prefixed version, currently\n                                       supported by Chrome, Edge, Opera and Firefox */\n}\n\nh1, h2, h3, h4, h5, h6 {\n    padding: 0px;\n    margin: 0px;\n}\n\nbody {\n    margin: 0;\n    min-width: 100vw;\n    min-height: 100vh;\n    display: grid;\n    justify-content: center;\n    align-content: center;\n}"],sourceRoot:""}]);const l=s},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(r)for(var l=0;l<this.length;l++){var i=this[l][0];null!=i&&(s[i]=!0)}for(var A=0;A<e.length;A++){var c=[].concat(e[A]);r&&s[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),n.push(c))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[n].concat([o]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},s=[],l=0;l<e.length;l++){var i=e[l],A=r.base?i[0]+r.base:i[0],c=o[A]||0,u="".concat(A," ").concat(c);o[A]=c+1;var d=t(u),b={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==d)n[d].references++,n[d].updater(b);else{var p=a(b,r);r.byIndex=l,n.splice(l,0,{identifier:u,updater:p,references:1})}s.push(u)}return s}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var s=0;s<o.length;s++){var l=t(o[s]);n[l].references--}for(var i=r(e,a),A=0;A<o.length;A++){var c=t(o[A]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}o=i}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{const e=()=>{let e="Manual";return{setStyle:n=>{"Manual"!==n&&"Computer"!==n||(e=n)},getStyle:()=>e,takeComputerTurnRandom:e=>{const n=[],t=e.observeBoard();for(let e=0;e<t.length;e++)for(let r=0;r<t[e].length;r++)2!==t[e][r]&&n.push([r,e]);const r=n[Math.floor(Math.random()*n.length)];e.receiveAttack(r)}}},n=e=>{let n=e,t=!1,r=[],a=[],o=[];const s=()=>{let e=[];for(let t=0;t<n;t++){e.push([]);for(let r=0;r<n;r++)e[t].push(0)}return e};let l=s(),i=null;const A=(e,n,t,r)=>{if(!Number.isInteger(n)||n<1||n>e.length)return!1;if(!d(t))return!1;if("boolean"!=typeof r)return!1;const a=c(n,t,r);if(a[0][0]<0||a[0][0]>=e.length||a[0][1]<0||a[0][1]>=e.length||a[1][0]<0||a[1][0]>=e.length||a[1][1]<0||a[1][1]>=e.length)return!1;for(let n=a[0][0]-1;n<=a[1][0]+1;n++)if(-1!==n&&n!==e.length)for(let t=a[0][1]-1;t<=a[1][1]+1;t++)if(-1!==t&&t!==e.length&&0!==e[t][n])return!1;return!0},c=(e,n,t)=>{const r=Math.abs(Math.floor((e-1)/2)),a=Math.abs(Math.ceil((e-1)/2));return t?[[n[0],n[1]-r],[n[0],n[1]+a]]:[[n[0]-r,n[1]],[n[0]+a,n[1]]]},u=(e,n)=>{if(0!==e[n[1]][n[0]]){const t=[],r=n=>{t.push(n),e[n[1]][n[0]]=0,n[1]>0&&0!==e[n[1]-1][n[0]]&&r([n[0],n[1]-1]),n[0]>0&&0!==e[n[1]][n[0]-1]&&r([n[0]-1,n[1]]),n[1]<e.length-1&&0!==e[n[1]+1][n[0]]&&r([n[0],n[1]+1]),n[0]<e.length-1&&0!==e[n[1]][n[0]+1]&&r([n[0]+1,n[1]])};return r(n),[e,t]}return null},d=e=>!!(Array.isArray(e)&&2===e.length&&Number.isInteger(e[0])&&e[0]>=0&&e[0]<l.length&&Number.isInteger(e[1])&&e[1]>=0&&e[1]<l.length),b=()=>t,p=()=>JSON.parse(JSON.stringify(l));return{startGame:()=>{t=!0,i=p()},resetBoard:()=>{l=s(),i=null,t=!1,r=[],a=[],o=[]},placeShip:(e,n,t)=>{if(b())return null;if(A(l,e,n,t)){const r=c(e,n,t);if(t)for(let e=r[0][1];e<=r[1][1];e++)l[e][n[0]]=1;else for(let e=r[0][0];e<=r[1][0];e++)l[n[1]][e]=1}},moveShip:(e,n,t)=>{if(b())return null;if(!d(e))return;if(!d(n))return;if("boolean"!=typeof t)return!1;let r=p();const a=u(r,e);if(!a)return;r=a[0];const o=a[1];let s=!1;o.length>2&&o[0][1]!==o[1][1]&&(s=!0);const i=Math.ceil((o.length-1)/2);let c=[];if(s?o.sort(((e,n)=>e[1]-n[1])):o.sort(((e,n)=>e[0]-n[0])),c=o[i],t&&(s=!s),t?(n[0]+=c[1]-e[1],n[1]+=c[0]-e[0]):(n[0]+=c[0]-e[0],n[1]+=c[1]-e[1]),A(r,o.length,n,s)){l=r;for(let e=0;e<o.length;e++)s?l[n[1]+(e-i)][n[0]]=1:l[n[1]][n[0]+(e-i)]=1}},deleteShip:e=>{if(b())return null;d(e)&&u(l,e)},receiveAttack:e=>{if(!b())return!1;if(!d(e))return!1;if(2!==l[e[1]][e[0]]){1===l[e[1]][e[0]]&&a.push(e),r.push(e),l[e[1]][e[0]]=2;let n=JSON.parse(JSON.stringify(i));const t=u(n,e);if(t){let e=!0;for(let n=0;n<t[1].length;n++)if(1===l[t[1][n][1]][t[1][n][0]]){e=!1;break}e&&o.push(t[1])}return!0}},getCellStateAt:e=>d(e)?l[e[1]][e[0]]:null,checkDefeat:()=>{if(!b())return!1;for(let e=0;e<l.length;e++)for(let n=0;n<l[e].length;n++)if(1===l[e][n])return!1;return!0},isGameStarted:b,observeBoard:p,previousAttacks:()=>JSON.parse(JSON.stringify(r)),previousHits:()=>JSON.parse(JSON.stringify(a)),previousSinks:()=>JSON.parse(JSON.stringify(o))}};var r=t(379),a=t.n(r),o=t(795),s=t.n(o),l=t(569),i=t.n(l),A=t(565),c=t.n(A),u=t(216),d=t.n(u),b=t(589),p=t.n(b),f=t(28),g={};g.styleTagTransform=p(),g.setAttributes=c(),g.insert=i().bind(null,"head"),g.domAPI=s(),g.insertStyleElement=d(),a()(f.Z,g),f.Z&&f.Z.locals&&f.Z.locals;var h=t(786),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=i().bind(null,"head"),m.domAPI=s(),m.insertStyleElement=d(),a()(h.Z,m),h.Z&&h.Z.locals&&h.Z.locals,(()=>{const t=(()=>{let t=!1,r=!1,a=0,o=[e(),e()];o[1].setStyle("Computer");let s=[n(10),n(10)];const l=()=>{r=!0,t=!1},i=()=>{setTimeout((()=>{const e=s[(a+1)%2];o[a].takeComputerTurnRandom(e),e.checkDefeat()?l():A()}),3e3)},A=()=>{a=(a+1)%2,"Computer"===o[a].getStyle()&&i()};return{startGame:()=>{if(t||r)return null;t=!0,r=!1,s[0].startGame(),s[1].startGame(),a=Math.floor(2*Math.random()),"Computer"===o[a].getStyle()&&i()},endGame:l,resetGame:()=>{t=!1,r=!1,s[0].resetBoard(),s[1].resetBoard()},manualAttack:(e,n)=>{if(!(Number.isInteger(e)&&e>=0&&e<=1))return null;if(!t||r)return null;if("Computer"===o[a].getStyle())return null;if(a===e)return null;const i=s[(a+1)%2],c=i.previousAttacks().length;if(i.receiveAttack(n),c!==i.previousAttacks().length){if(i.checkDefeat())return void l();A()}},isGameStarted:()=>t,isGameEnded:()=>r,getPlayers:()=>o,getGameboards:()=>s,changeTurn:A,getTurn:()=>a}})(),r={base:null,boardArea:null,board1:null,b1XAxis:null,b1YAxis:null,board2:null,b2XAxis:null,b2XAxis:null},a=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"div",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;const r=document.createElement(e);return r instanceof HTMLUnknownElement?null:(Array.isArray(n)&&n.forEach((e=>{"string"==typeof e&&r.classList.add(e)})),t instanceof HTMLElement&&t.appendChild(r),r)},o=e=>e instanceof Element?a("div",["btls-cell"],e):null,s=(e,n)=>{switch(e.classList.remove("ship","hit","empty"),n){case 1:e.classList.add("ship");case 2:e.classList.add("hit");default:e.classList.add("empty")}},l=(e,n,t)=>{if(!c(e))return null;if(!(Number.isInteger(n)&&n>=0&&n<=1))return null;if(!(t instanceof HTMLElement))return null;t.replaceChildren();const r=e.observeBoard();for(let e=0;e<r.length;e++)for(let a=0;a<r[e].length;a++){const l=o(t);l&&(s(l,r[e][a]),l.addEventListener("click",(()=>{A(l,[a,e],n)})))}},i=(e,n,r,o)=>{const s=t.getGameboards()[n].observeBoard();if(0===r)for(let n=0;n<s.length;n++)a("div",["btls-axis-no"],e).textContent=n;else if(s.length>0)for(let n=0;n<s[0].length;n++)a("div",["btls-axis-no"],e).textContent=n;o.appendChild(e)},A=(e,n,r)=>{if(!(e instanceof HTMLElement))return null;if(!(Number.isInteger(r)&&r>=0&&r<=1))return null;let a,o;if(o=t.getGameboards()[r],a=o.getCellStateAt(n),null===a)return null;t.manualAttack(r,n),a=o.getCellStateAt(n),s(e,a)},c=e=>null===e||"object"!=typeof e?null:!!Object.hasOwn(e,"observeBoard")||null;return{displayGame:()=>{r.base&&r.base.removeElement(),r.base=a("div",["btls-base"],document.body),r.boardArea=a("div",["btls-board-area"],r.base),r.board2=a("div",["btls-board-two"],r.boardArea),r.b2XAxis=a("div",["btls-axis-2-x"],r.boardArea),r.b2YAxis=a("div",["btls-axis-2-y"],r.boardArea),r.board1=a("div",["btls-board-one"],r.boardArea),r.b1XAxis=a("div",["btls-axis-1-x"],r.boardArea),r.b1YAxis=a("div",["btls-axis-1-y"],r.boardArea),l(t.getGameboards()[0],0,r.board1),l(t.getGameboards()[1],1,r.board2),i(r.b1XAxis,0,0,r.boardArea),i(r.b1YAxis,0,1,r.boardArea),i(r.b2XAxis,1,0,r.boardArea),i(r.b2YAxis,1,1,r.boardArea),t.startGame()},createElement:a,createCell:o,createBoard:l,attackCell:A}})().displayGame()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,