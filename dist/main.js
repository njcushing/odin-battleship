(()=>{var e={786:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(537),a=t.n(r),o=t(645),l=t.n(o)()(a());l.push([e.id,":root {\n    --battleship-history-box-width: 8rem;\n    --battleship-board-size: 20rem;\n    --battleship-info-box-height: 4rem;\n    --battleship-place-ship-box-width: 8rem;\n}\n\n.btls-base {\n    display: grid;\n    grid-template-rows: repeat(3, auto); \n    grid-template-columns: repeat(3, auto); \n    border: 1px solid black;\n}\n\n.btls-history-box {\n    grid-area: 2 / 1 / 3 / 2;\n    width: var(--battleship-history-box-width, 10rem);\n    border: 1px solid #000;\n}\n\n.btls-title {\n    grid-area: 1 / 1 / 2 / -1;\n    font-size: 3rem;\n    text-align: center;\n}\n\n.btls-board-area {\n    grid-area: 2 / 2 / 3 / 3;\n    display: grid;\n    grid-template-rows:  auto var(--battleship-board-size, 24rem) auto var(--battleship-info-box-height, 3rem) auto var(--battleship-board-size, 24rem) auto;\n    grid-template-columns: auto var(--battleship-board-size, 24rem) var(--battleship-place-ship-box-width, 10rem);\n    padding: 0.5rem;\n}\n\n.btls-board-one,\n.btls-board-two {\n    display: grid;\n    grid-template-rows: repeat(10, auto);\n    grid-template-columns: repeat(10, auto);\n    padding: 0.5rem;\n    gap: 0.2rem;\n}\n\n.btls-axis-1-x,\n.btls-axis-1-y,\n.btls-axis-2-x,\n.btls-axis-2-y {\n    display: flex;\n    justify-content: space-around;\n    text-align: center;\n    vertical-align: center;\n}\n\n.btls-board-one {\n    grid-area: -3 / 2 / -2 / 3;\n}\n.btls-axis-1-x {\n    grid-area: -2 / 2 / -1 / 3;\n    padding: 0rem 0.5rem;\n}\n.btls-axis-1-y {\n    grid-area: -3 / 1 / -2 / 2;\n    flex-direction: column;\n    padding: 0.5rem 0rem;\n}\n.btls-board-two {\n    grid-area: 2 / 2 / 3 / 3;\n}\n.btls-axis-2-x {\n    grid-area: 1 / 2 / 2 / 3;\n    padding: 0rem 0.5rem;\n}\n.btls-axis-2-y {\n    grid-area: 2 / 1 / 3 / 2;\n    flex-direction: column;\n    padding: 0.5rem 0rem;\n}\n\n.btls-axis-no {\n    padding: 0rem;\n    margin: 0rem;\n}\n\n.btls-b1-id,\n.btls-b2-id {\n    font-size: 0.8rem;\n    text-align: center;\n    vertical-align: center;\n}\n\n.btls-b1-id {\n    grid-area: -4 / 2 / -3 / 3;\n}\n.btls-b2-id {\n    grid-area: 3 / 2 / 4 / 3;\n}\n\n.btls-b1-btns,\n.btls-b2-btns {\n    display: flex;\n    justify-content: center;\n    gap: 0.3rem;\n}\n.btls-b1-btns {\n    grid-area: -4 / 3 / -3 / 4;\n}\n.btls-b2-btns {\n    grid-area: 3 / 3 / 4 / 4;\n}\n\n.btls-b1-change-style-button,\n.btls-b2-change-style-button,\n.btls-b1-hide-ships-button,\n.btls-b2-hide-ships-button {\n    font-size: 0.5rem;\n    border-radius: 9999px;\n    outline: none;\n    border: none;\n    padding: 0.3rem 0.4rem;\n}\n\n.btls-b1-change-style-button,\n.btls-b2-change-style-button {\n    background-color: #5bd656;\n}\n.btls-b1-change-style-button:hover,\n.btls-b2-change-style-button:hover {\n    background-color: #6bf566;\n}\n.btls-b1-change-style-button:active,\n.btls-b2-change-style-button:active {\n    background-color: #31ac2c;\n}\n.btls-b1-hide-ships-button,\n.btls-b2-hide-ships-button {\n    background-color: #ecc825;\n}\n.btls-b1-hide-ships-button:hover,\n.btls-b2-hide-ships-button:hover {\n    background-color: #fcdc4e;\n}\n.btls-b1-hide-ships-button:active,\n.btls-b2-hide-ships-button:active {\n    background-color: #d4b216;\n}\n\n.btls-info-box {\n    grid-area: -5 / 2 / -4 / 3;\n    display: flex;\n    flex-direction: column;\n    place-content: center;\n    align-items: center;\n    text-align: center;\n    padding: 0.5rem;\n}\n\n.btls-b1-place-ship-box,\n.btls-b2-place-ship-box {\n    display: grid;\n    grid-template-rows: 1fr repeat(4, auto);\n    grid-template-columns: repeat(2, calc(50% - 0.1rem));\n    align-items: center;\n    width: calc(var(--battleship-place-ship-box-width, 10rem) - 0.2rem);\n    padding: 0.5rem 0rem;\n    gap: 0.4rem 0.2rem;\n}\n.btls-b1-place-ship-box {\n    grid-area: 6 / -2 / 7 / -1;\n}\n.btls-b2-place-ship-box {\n    grid-area: 2 / -2 / 3 / -1;\n}\n\n.btls-b1-place-ship-model,\n.btls-b2-place-ship-model {\n    grid-area: 1 / 1 / 2 / -1;\n    place-self: center;\n    width: 100%;\n    height: 100%;\n    gap: 0.2rem;\n}\n\n.btls-model-cell {\n    outline: 1px solid black;\n}\n\n.btls-b1-place-ship-size-label,\n.btls-b2-place-ship-size-label,\n.btls-b1-place-ship-x-coord-label,\n.btls-b2-place-ship-x-coord-label,\n.btls-b1-place-ship-y-coord-label,\n.btls-b2-place-ship-y-coord-label {\n    font-size: 0.8rem;\n    text-align: center;\n}\n.btls-b1-place-ship-size-label,\n.btls-b2-place-ship-size-label {\n    grid-area: 2 / 1 / 3 / 2;\n}\n.btls-b1-place-ship-x-coord-label,\n.btls-b2-place-ship-x-coord-label {\n    grid-area: 3 / 1 / 4 / 2;\n}\n.btls-b1-place-ship-y-coord-label,\n.btls-b2-place-ship-y-coord-label {\n    grid-area: 4 / 1 / 5 / 2;\n}\n\n.btls-b1-place-ship-size,\n.btls-b2-place-ship-size,\n.btls-b1-place-ship-x-coord,\n.btls-b2-place-ship-x-coord,\n.btls-b1-place-ship-y-coord,\n.btls-b2-place-ship-y-coord {\n    font-size: 1rem;\n    border-radius: 9999px;\n    padding: 0.1rem 0.3rem;\n    border: none;\n    outline: 1px solid black;\n}\n.btls-b1-place-ship-size,\n.btls-b2-place-ship-size {\n    grid-area: 2 / 2 / 3 / 3;\n}\n.btls-b1-place-ship-x-coord,\n.btls-b2-place-ship-x-coord {\n    grid-area: 3 / 2 / 4 / 3;\n}\n.btls-b1-place-ship-y-coord,\n.btls-b2-place-ship-y-coord {\n    grid-area: 4 / 2 / 5 / 3;\n}\n\n.btls-b1-place-ship-rotation,\n.btls-b2-place-ship-rotation,\n.btls-b1-place-ship,\n.btls-b2-place-ship {\n    font-size: 0.8rem;\n    border-radius: 9999px;\n    outline: none;\n    border: none;\n    padding: 0.3rem 0.1rem;\n}\n\n.btls-b1-place-ship-rotation,\n.btls-b2-place-ship-rotation {\n    grid-area: 5 / 1 / 6 / -1;\n    background-color: #fa8bde;\n}\n.btls-b1-place-ship-rotation:hover,\n.btls-b2-place-ship-rotation:hover {\n    background-color: #ffabea;\n}\n.btls-b1-place-ship-rotation:active,\n.btls-b2-place-ship-rotation:active {\n    background-color: #d64ab3;\n}\n\n.btls-b1-place-ship,\n.btls-b2-place-ship {\n    grid-area: 6 / 1 / 7 / -1;\n    background-color: #9b8afc;\n}\n.btls-b1-place-ship:hover,\n.btls-b2-place-ship:hover {\n    background-color: #b5a8ff;\n}\n.btls-b1-place-ship:active,\n.btls-b2-place-ship:active {\n    background-color: #7e68fc;\n}\n\n.btls-buttons {\n    grid-area: 3 / 1 / -1 / -1;\n    display: flex;\n    justify-content: center;\n    gap: 0.5rem;\n}\n\n.btls-start,\n.btls-reset {\n    font-size: 0.8rem;\n    border-radius: 9999px;\n    background-color: #fa8bde;\n    outline: none;\n    border: none;\n    padding: 0.5rem 0.8rem;\n    margin: 0.8rem 0rem;\n}\n.btls-start {\n    background-color: #60e654;\n}\n.btls-start:hover {\n    background-color: #80f775;\n}\n.btls-start:active {\n    background-color: #49d13d;\n}\n.btls-reset {\n    background-color: #eb6767;\n}\n.btls-reset:hover {\n    background-color: #eb7f7f;\n}\n.btls-reset:active {\n    background-color: #dd4e4e;\n}\n\n.btls-cell {\n    outline: 1px solid black;\n}\n.btls-board-area:not(.game-ended) .btls-cell:hover {\n    outline: 2px solid black;\n}\n\n.btls-cell.empty {\n    background-color: rgb(255, 255, 255);\n}\n.btls-board-area:not(.game-ended) .btls-cell.empty:hover {\n    background-color: #ececec;\n}\n.btls-board-area:not(.game-ended) .btls-cell.empty:active {\n    background-color: #d1d1d1;\n}\n.btls-board-area:not(.game-ended) .btls-board-one:not(.ships-hidden) > .btls-cell.ship,\n.btls-board-area.game-ended .btls-board-one:not(.ships-hidden) > .btls-cell.ship,\n.btls-board-area.game-ended .btls-board-one.ships-hidden > .btls-cell.ship {\n    background-color: rgb(50, 171, 187);\n}\n.btls-board-area:not(.game-ended) .btls-board-one:not(.ships-hidden) > .btls-cell.ship:hover {\n    background-color: rgb(88, 202, 218);\n}\n.btls-board-area:not(.game-ended) .btls-board-two:not(.ships-hidden) > .btls-cell.ship,\n.btls-board-area.game-ended .btls-board-two:not(.ships-hidden) > .btls-cell.ship,\n.btls-board-area.game-ended .btls-board-two.ships-hidden > .btls-cell.ship {\n    background-color: rgb(50, 171, 187);\n}\n.btls-board-area:not(.game-ended) .btls-board-two:not(.ships-hidden) > .btls-cell.ship:hover {\n    background-color: rgb(88, 202, 218);\n}\n.btls-cell.attacked {\n    background-color: rgb(194, 76, 76);\n}\n.btls-board-area:not(.game-ended) .btls-cell.attacked:hover {\n    background-color: rgb(211, 101, 101);\n}\n.btls-cell.hit {\n    background-color: rgb(98, 212, 69);\n}\n.btls-board-area:not(.game-ended) .btls-cell.hit:hover {\n    background-color: rgb(124, 236, 96);\n}","",{version:3,sources:["webpack://./src/DOM/DOM-styles.css"],names:[],mappings:"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",sourcesContent:[":root {\n    --battleship-history-box-width: 8rem;\n    --battleship-board-size: 20rem;\n    --battleship-info-box-height: 4rem;\n    --battleship-place-ship-box-width: 8rem;\n}\n\n.btls-base {\n    display: grid;\n    grid-template-rows: repeat(3, auto); \n    grid-template-columns: repeat(3, auto); \n    border: 1px solid black;\n}\n\n.btls-history-box {\n    grid-area: 2 / 1 / 3 / 2;\n    width: var(--battleship-history-box-width, 10rem);\n    border: 1px solid #000;\n}\n\n.btls-title {\n    grid-area: 1 / 1 / 2 / -1;\n    font-size: 3rem;\n    text-align: center;\n}\n\n.btls-board-area {\n    grid-area: 2 / 2 / 3 / 3;\n    display: grid;\n    grid-template-rows:  auto var(--battleship-board-size, 24rem) auto var(--battleship-info-box-height, 3rem) auto var(--battleship-board-size, 24rem) auto;\n    grid-template-columns: auto var(--battleship-board-size, 24rem) var(--battleship-place-ship-box-width, 10rem);\n    padding: 0.5rem;\n}\n\n.btls-board-one,\n.btls-board-two {\n    display: grid;\n    grid-template-rows: repeat(10, auto);\n    grid-template-columns: repeat(10, auto);\n    padding: 0.5rem;\n    gap: 0.2rem;\n}\n\n.btls-axis-1-x,\n.btls-axis-1-y,\n.btls-axis-2-x,\n.btls-axis-2-y {\n    display: flex;\n    justify-content: space-around;\n    text-align: center;\n    vertical-align: center;\n}\n\n.btls-board-one {\n    grid-area: -3 / 2 / -2 / 3;\n}\n.btls-axis-1-x {\n    grid-area: -2 / 2 / -1 / 3;\n    padding: 0rem 0.5rem;\n}\n.btls-axis-1-y {\n    grid-area: -3 / 1 / -2 / 2;\n    flex-direction: column;\n    padding: 0.5rem 0rem;\n}\n.btls-board-two {\n    grid-area: 2 / 2 / 3 / 3;\n}\n.btls-axis-2-x {\n    grid-area: 1 / 2 / 2 / 3;\n    padding: 0rem 0.5rem;\n}\n.btls-axis-2-y {\n    grid-area: 2 / 1 / 3 / 2;\n    flex-direction: column;\n    padding: 0.5rem 0rem;\n}\n\n.btls-axis-no {\n    padding: 0rem;\n    margin: 0rem;\n}\n\n.btls-b1-id,\n.btls-b2-id {\n    font-size: 0.8rem;\n    text-align: center;\n    vertical-align: center;\n}\n\n.btls-b1-id {\n    grid-area: -4 / 2 / -3 / 3;\n}\n.btls-b2-id {\n    grid-area: 3 / 2 / 4 / 3;\n}\n\n.btls-b1-btns,\n.btls-b2-btns {\n    display: flex;\n    justify-content: center;\n    gap: 0.3rem;\n}\n.btls-b1-btns {\n    grid-area: -4 / 3 / -3 / 4;\n}\n.btls-b2-btns {\n    grid-area: 3 / 3 / 4 / 4;\n}\n\n.btls-b1-change-style-button,\n.btls-b2-change-style-button,\n.btls-b1-hide-ships-button,\n.btls-b2-hide-ships-button {\n    font-size: 0.5rem;\n    border-radius: 9999px;\n    outline: none;\n    border: none;\n    padding: 0.3rem 0.4rem;\n}\n\n.btls-b1-change-style-button,\n.btls-b2-change-style-button {\n    background-color: #5bd656;\n}\n.btls-b1-change-style-button:hover,\n.btls-b2-change-style-button:hover {\n    background-color: #6bf566;\n}\n.btls-b1-change-style-button:active,\n.btls-b2-change-style-button:active {\n    background-color: #31ac2c;\n}\n.btls-b1-hide-ships-button,\n.btls-b2-hide-ships-button {\n    background-color: #ecc825;\n}\n.btls-b1-hide-ships-button:hover,\n.btls-b2-hide-ships-button:hover {\n    background-color: #fcdc4e;\n}\n.btls-b1-hide-ships-button:active,\n.btls-b2-hide-ships-button:active {\n    background-color: #d4b216;\n}\n\n.btls-info-box {\n    grid-area: -5 / 2 / -4 / 3;\n    display: flex;\n    flex-direction: column;\n    place-content: center;\n    align-items: center;\n    text-align: center;\n    padding: 0.5rem;\n}\n\n.btls-b1-place-ship-box,\n.btls-b2-place-ship-box {\n    display: grid;\n    grid-template-rows: 1fr repeat(4, auto);\n    grid-template-columns: repeat(2, calc(50% - 0.1rem));\n    align-items: center;\n    width: calc(var(--battleship-place-ship-box-width, 10rem) - 0.2rem);\n    padding: 0.5rem 0rem;\n    gap: 0.4rem 0.2rem;\n}\n.btls-b1-place-ship-box {\n    grid-area: 6 / -2 / 7 / -1;\n}\n.btls-b2-place-ship-box {\n    grid-area: 2 / -2 / 3 / -1;\n}\n\n.btls-b1-place-ship-model,\n.btls-b2-place-ship-model {\n    grid-area: 1 / 1 / 2 / -1;\n    place-self: center;\n    width: 100%;\n    height: 100%;\n    gap: 0.2rem;\n}\n\n.btls-model-cell {\n    outline: 1px solid black;\n}\n\n.btls-b1-place-ship-size-label,\n.btls-b2-place-ship-size-label,\n.btls-b1-place-ship-x-coord-label,\n.btls-b2-place-ship-x-coord-label,\n.btls-b1-place-ship-y-coord-label,\n.btls-b2-place-ship-y-coord-label {\n    font-size: 0.8rem;\n    text-align: center;\n}\n.btls-b1-place-ship-size-label,\n.btls-b2-place-ship-size-label {\n    grid-area: 2 / 1 / 3 / 2;\n}\n.btls-b1-place-ship-x-coord-label,\n.btls-b2-place-ship-x-coord-label {\n    grid-area: 3 / 1 / 4 / 2;\n}\n.btls-b1-place-ship-y-coord-label,\n.btls-b2-place-ship-y-coord-label {\n    grid-area: 4 / 1 / 5 / 2;\n}\n\n.btls-b1-place-ship-size,\n.btls-b2-place-ship-size,\n.btls-b1-place-ship-x-coord,\n.btls-b2-place-ship-x-coord,\n.btls-b1-place-ship-y-coord,\n.btls-b2-place-ship-y-coord {\n    font-size: 1rem;\n    border-radius: 9999px;\n    padding: 0.1rem 0.3rem;\n    border: none;\n    outline: 1px solid black;\n}\n.btls-b1-place-ship-size,\n.btls-b2-place-ship-size {\n    grid-area: 2 / 2 / 3 / 3;\n}\n.btls-b1-place-ship-x-coord,\n.btls-b2-place-ship-x-coord {\n    grid-area: 3 / 2 / 4 / 3;\n}\n.btls-b1-place-ship-y-coord,\n.btls-b2-place-ship-y-coord {\n    grid-area: 4 / 2 / 5 / 3;\n}\n\n.btls-b1-place-ship-rotation,\n.btls-b2-place-ship-rotation,\n.btls-b1-place-ship,\n.btls-b2-place-ship {\n    font-size: 0.8rem;\n    border-radius: 9999px;\n    outline: none;\n    border: none;\n    padding: 0.3rem 0.1rem;\n}\n\n.btls-b1-place-ship-rotation,\n.btls-b2-place-ship-rotation {\n    grid-area: 5 / 1 / 6 / -1;\n    background-color: #fa8bde;\n}\n.btls-b1-place-ship-rotation:hover,\n.btls-b2-place-ship-rotation:hover {\n    background-color: #ffabea;\n}\n.btls-b1-place-ship-rotation:active,\n.btls-b2-place-ship-rotation:active {\n    background-color: #d64ab3;\n}\n\n.btls-b1-place-ship,\n.btls-b2-place-ship {\n    grid-area: 6 / 1 / 7 / -1;\n    background-color: #9b8afc;\n}\n.btls-b1-place-ship:hover,\n.btls-b2-place-ship:hover {\n    background-color: #b5a8ff;\n}\n.btls-b1-place-ship:active,\n.btls-b2-place-ship:active {\n    background-color: #7e68fc;\n}\n\n.btls-buttons {\n    grid-area: 3 / 1 / -1 / -1;\n    display: flex;\n    justify-content: center;\n    gap: 0.5rem;\n}\n\n.btls-start,\n.btls-reset {\n    font-size: 0.8rem;\n    border-radius: 9999px;\n    background-color: #fa8bde;\n    outline: none;\n    border: none;\n    padding: 0.5rem 0.8rem;\n    margin: 0.8rem 0rem;\n}\n.btls-start {\n    background-color: #60e654;\n}\n.btls-start:hover {\n    background-color: #80f775;\n}\n.btls-start:active {\n    background-color: #49d13d;\n}\n.btls-reset {\n    background-color: #eb6767;\n}\n.btls-reset:hover {\n    background-color: #eb7f7f;\n}\n.btls-reset:active {\n    background-color: #dd4e4e;\n}\n\n.btls-cell {\n    outline: 1px solid black;\n}\n.btls-board-area:not(.game-ended) .btls-cell:hover {\n    outline: 2px solid black;\n}\n\n.btls-cell.empty {\n    background-color: rgb(255, 255, 255);\n}\n.btls-board-area:not(.game-ended) .btls-cell.empty:hover {\n    background-color: #ececec;\n}\n.btls-board-area:not(.game-ended) .btls-cell.empty:active {\n    background-color: #d1d1d1;\n}\n.btls-board-area:not(.game-ended) .btls-board-one:not(.ships-hidden) > .btls-cell.ship,\n.btls-board-area.game-ended .btls-board-one:not(.ships-hidden) > .btls-cell.ship,\n.btls-board-area.game-ended .btls-board-one.ships-hidden > .btls-cell.ship {\n    background-color: rgb(50, 171, 187);\n}\n.btls-board-area:not(.game-ended) .btls-board-one:not(.ships-hidden) > .btls-cell.ship:hover {\n    background-color: rgb(88, 202, 218);\n}\n.btls-board-area:not(.game-ended) .btls-board-two:not(.ships-hidden) > .btls-cell.ship,\n.btls-board-area.game-ended .btls-board-two:not(.ships-hidden) > .btls-cell.ship,\n.btls-board-area.game-ended .btls-board-two.ships-hidden > .btls-cell.ship {\n    background-color: rgb(50, 171, 187);\n}\n.btls-board-area:not(.game-ended) .btls-board-two:not(.ships-hidden) > .btls-cell.ship:hover {\n    background-color: rgb(88, 202, 218);\n}\n.btls-cell.attacked {\n    background-color: rgb(194, 76, 76);\n}\n.btls-board-area:not(.game-ended) .btls-cell.attacked:hover {\n    background-color: rgb(211, 101, 101);\n}\n.btls-cell.hit {\n    background-color: rgb(98, 212, 69);\n}\n.btls-board-area:not(.game-ended) .btls-cell.hit:hover {\n    background-color: rgb(124, 236, 96);\n}"],sourceRoot:""}]);const s=l},28:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(537),a=t.n(r),o=t(645),l=t.n(o)()(a());l.push([e.id,":root {\n    font-size: 20px;\n}\n\n.no-select {\n    -webkit-touch-callout: none;    /* iOS Safari */\n    -webkit-user-select: none;      /* Safari */\n    -khtml-user-select: none;       /* Konqueror HTML */\n    -moz-user-select: none;         /* Old versions of Firefox */\n    -ms-user-select: none;          /* Internet Explorer/Edge */\n    user-select: none;              /* Non-prefixed version, currently\n                                       supported by Chrome, Edge, Opera and Firefox */\n}\n\nh1, h2, h3, h4, h5, h6 {\n    padding: 0px;\n    margin: 0px;\n}\n\nbody {\n    margin: 0;\n    min-width: 100vw;\n    min-height: 100vh;\n    display: grid;\n    justify-content: center;\n    align-content: center;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,eAAe;AACnB;;AAEA;IACI,2BAA2B,KAAK,eAAe;IAC/C,yBAAyB,OAAO,WAAW;IAC3C,wBAAwB,QAAQ,mBAAmB;IACnD,sBAAsB,UAAU,4BAA4B;IAC5D,qBAAqB,WAAW,2BAA2B;IAC3D,iBAAiB,eAAe;qFACiD;AACrF;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,SAAS;IACT,gBAAgB;IAChB,iBAAiB;IACjB,aAAa;IACb,uBAAuB;IACvB,qBAAqB;AACzB",sourcesContent:[":root {\n    font-size: 20px;\n}\n\n.no-select {\n    -webkit-touch-callout: none;    /* iOS Safari */\n    -webkit-user-select: none;      /* Safari */\n    -khtml-user-select: none;       /* Konqueror HTML */\n    -moz-user-select: none;         /* Old versions of Firefox */\n    -ms-user-select: none;          /* Internet Explorer/Edge */\n    user-select: none;              /* Non-prefixed version, currently\n                                       supported by Chrome, Edge, Opera and Firefox */\n}\n\nh1, h2, h3, h4, h5, h6 {\n    padding: 0px;\n    margin: 0px;\n}\n\nbody {\n    margin: 0;\n    min-width: 100vw;\n    min-height: 100vh;\n    display: grid;\n    justify-content: center;\n    align-content: center;\n}"],sourceRoot:""}]);const s=l},645:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var l={};if(r)for(var s=0;s<this.length;s++){var i=this[s][0];null!=i&&(l[i]=!0)}for(var b=0;b<e.length;b++){var A=[].concat(e[b]);r&&l[A[0]]||(void 0!==o&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=o),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),n.push(A))}},n}},537:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[n].concat([o]).join("\n")}return[n].join("\n")}},798:function(e,n,t){e=t.nmd(e),function(t,r){"use strict";var a={};t.PubSub?(a=t.PubSub,console.warn("PubSub already loaded, using existing version")):(t.PubSub=a,function(e){var n={},t=-1,r="*";function a(e,n,t){try{e(n,t)}catch(e){setTimeout(function(e){return function(){throw e}}(e),0)}}function o(e,n,t){e(n,t)}function l(e,t,r,l){var s,i=n[t],b=l?o:a;if(Object.prototype.hasOwnProperty.call(n,t))for(s in i)Object.prototype.hasOwnProperty.call(i,s)&&b(i[s],e,r)}function s(e){var t=String(e);return Boolean(Object.prototype.hasOwnProperty.call(n,t)&&function(e){var n;for(n in e)if(Object.prototype.hasOwnProperty.call(e,n))return!0;return!1}(n[t]))}function i(e,n,t,a){var o=function(e,n,t){return function(){var a=String(e),o=a.lastIndexOf(".");for(l(e,e,n,t);-1!==o;)o=(a=a.substr(0,o)).lastIndexOf("."),l(e,a,n,t);l(e,r,n,t)}}(e="symbol"==typeof e?e.toString():e,n,a);return!!function(e){for(var n=String(e),t=s(n)||s(r),a=n.lastIndexOf(".");!t&&-1!==a;)a=(n=n.substr(0,a)).lastIndexOf("."),t=s(n);return t}(e)&&(!0===t?o():setTimeout(o,0),!0)}e.publish=function(n,t){return i(n,t,!1,e.immediateExceptions)},e.publishSync=function(n,t){return i(n,t,!0,e.immediateExceptions)},e.subscribe=function(e,r){if("function"!=typeof r)return!1;e="symbol"==typeof e?e.toString():e,Object.prototype.hasOwnProperty.call(n,e)||(n[e]={});var a="uid_"+String(++t);return n[e][a]=r,a},e.subscribeAll=function(n){return e.subscribe(r,n)},e.subscribeOnce=function(n,t){var r=e.subscribe(n,(function(){e.unsubscribe(r),t.apply(this,arguments)}));return e},e.clearAllSubscriptions=function(){n={}},e.clearSubscriptions=function(e){var t;for(t in n)Object.prototype.hasOwnProperty.call(n,t)&&0===t.indexOf(e)&&delete n[t]},e.countSubscriptions=function(e){var t,r,a=0;for(t in n)if(Object.prototype.hasOwnProperty.call(n,t)&&0===t.indexOf(e)){for(r in n[t])a++;break}return a},e.getSubscriptions=function(e){var t,r=[];for(t in n)Object.prototype.hasOwnProperty.call(n,t)&&0===t.indexOf(e)&&r.push(t);return r},e.unsubscribe=function(t){var r,a,o,l="string"==typeof t&&(Object.prototype.hasOwnProperty.call(n,t)||function(e){var t;for(t in n)if(Object.prototype.hasOwnProperty.call(n,t)&&0===t.indexOf(e))return!0;return!1}(t)),s=!l&&"string"==typeof t,i="function"==typeof t,b=!1;if(!l){for(r in n)if(Object.prototype.hasOwnProperty.call(n,r)){if(a=n[r],s&&a[t]){delete a[t],b=t;break}if(i)for(o in a)Object.prototype.hasOwnProperty.call(a,o)&&a[o]===t&&(delete a[o],b=!0)}return b}e.clearSubscriptions(t)}}(a)),void 0!==e&&e.exports&&(n=e.exports=a),n.PubSub=a,e.exports=n=a}("object"==typeof window&&window||this)},379:e=>{"use strict";var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},l=[],s=0;s<e.length;s++){var i=e[s],b=r.base?i[0]+r.base:i[0],A=o[b]||0,d="".concat(b," ").concat(A);o[b]=A+1;var c=t(d),p={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==c)n[c].references++,n[c].updater(p);else{var u=a(p,r);r.byIndex=s,n.splice(s,0,{identifier:d,updater:u,references:1})}l.push(d)}return l}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var l=0;l<o.length;l++){var s=t(o[l]);n[s].references--}for(var i=r(e,a),b=0;b<o.length;b++){var A=t(o[b]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}o=i}}},569:e=>{"use strict";var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,loaded:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),t.nc=void 0,(()=>{"use strict";var e=t(798),n=t.n(e);const r=()=>{let e="Manual";const t=(e,n)=>n[0]*e+n[1];return{setStyle:n=>{"Manual"!==n&&"Computer"!==n||(e=n)},getStyle:()=>e,takeComputerTurn:(e,r)=>{e.previousAttacks();const a=e.previousHits(),o=e.previousSinks(),l=0===o.length?null:o[o.length-1],s=e.observeBoard();for(let t=a.length-1;t>=0;t--){const o=a[t];if(null===l||Array.isArray(l)&&!(l.indexOf(o)>-1)){const t=[];if(e.getCellStateAt([o[0]-1,o[1]])<2&&t.push([o[0]-1,o[1]]),e.getCellStateAt([o[0],o[1]-1])<2&&t.push([o[0],o[1]-1]),e.getCellStateAt([o[0]+1,o[1]])<2&&t.push([o[0]+1,o[1]]),e.getCellStateAt([o[0],o[1]+1])<2&&t.push([o[0],o[1]+1]),0===t.length)continue;const a=Math.floor(Math.random()*t.length);return e.receiveAttack(t[a]),void n().publish("BATTLESHIP-COMPUTER-ATTACKED-POSITION",[t[a],r])}return}const i=new Set;for(let e=0;e<s.length;e++)for(let n=0;n<s[e].length;n++)if(s[e][n]<2){let r=t(s.length,[n,e]);i.add(r)}for(let e=0;e<o.length;e++)for(let n=0;n<o[e].length;n++){let r=t(s.length,o[e][n]);i.has(r)&&i.delete(r)}let b=Array.from(i),A=b[Math.floor(Math.random()*b.length)],d=(c=s.length,p=A,[Math.floor(p/c),p-Math.floor(p/c)*c]);var c,p;e.receiveAttack(d),n().publish("BATTLESHIP-COMPUTER-ATTACKED-POSITION",[d,r])}}},a=e=>{let n=e,t=!1,r=[],a=[],o=[];const l=()=>{let e=[];for(let t=0;t<Math.max(1,n);t++){e.push([]);for(let r=0;r<Math.max(1,n);r++)e[t].push(0)}return e};let s=l(),i=null;const b=(e,n,t)=>{if(u())return null;if(A(s,e,n,t)){const r=d(e,n,t);if(t)for(let e=r[0][1];e<=r[1][1];e++)s[e][n[0]]=1;else for(let e=r[0][0];e<=r[1][0];e++)s[n[1]][e]=1}},A=(e,n,t,r)=>{if(!Number.isInteger(n)||n<1||n>e.length)return!1;if(!p(t))return!1;if("boolean"!=typeof r)return!1;const a=d(n,t,r);if(a[0][0]<0||a[0][0]>=e.length||a[0][1]<0||a[0][1]>=e.length||a[1][0]<0||a[1][0]>=e.length||a[1][1]<0||a[1][1]>=e.length)return!1;for(let n=a[0][0]-1;n<=a[1][0]+1;n++)if(-1!==n&&n!==e.length)for(let t=a[0][1]-1;t<=a[1][1]+1;t++)if(-1!==t&&t!==e.length&&0!==e[t][n])return!1;return!0},d=(e,n,t)=>{const r=Math.abs(Math.floor((e-1)/2)),a=Math.abs(Math.ceil((e-1)/2));return t?[[n[0],n[1]-r],[n[0],n[1]+a]]:[[n[0]-r,n[1]],[n[0]+a,n[1]]]},c=(e,n)=>{if(0!==e[n[1]][n[0]]){const t=[],r=n=>{t.push(n),e[n[1]][n[0]]=0,n[1]>0&&0!==e[n[1]-1][n[0]]&&r([n[0],n[1]-1]),n[0]>0&&0!==e[n[1]][n[0]-1]&&r([n[0]-1,n[1]]),n[1]<e.length-1&&0!==e[n[1]+1][n[0]]&&r([n[0],n[1]+1]),n[0]<e.length-1&&0!==e[n[1]][n[0]+1]&&r([n[0]+1,n[1]])};return r(n),[e,t]}return null},p=e=>!!(Array.isArray(e)&&2===e.length&&Number.isInteger(e[0])&&e[0]>=0&&e[0]<s.length&&Number.isInteger(e[1])&&e[1]>=0&&e[1]<s.length),u=()=>t,h=()=>JSON.parse(JSON.stringify(s)),g=()=>{let e,n=0;e=t?JSON.parse(JSON.stringify(i)):h();for(let t=0;t<e.length;t++)for(let r=0;r<e[t].length;r++){const a=c(e,[r,t]);a&&a[1].length>0&&n++}return n};return{startGame:()=>{t=!0,i=h()},resetBoard:()=>{s=l(),i=null,t=!1,r=[],a=[],o=[]},randomiseBoard:()=>{const e=Math.floor(3*Math.random())+4;for(let n=0;n<e;n++){const e=2,n=6;let t=Math.floor(Math.random()*(n-e+1))+e;const r=0!==Math.floor(2*Math.random()),a=[];for(;0===a.length&&t>=e;){for(let e=0;e<s.length;e++)for(let n=0;n<s[0].length;n++)A(s,t,[n,e],r)&&a.push([n,e]);0===a.length&&t--}const o=Math.floor(Math.random()*a.length);b(t,a[o],r)}},placeShip:b,moveShip:(e,n,t)=>{if(u())return null;if(!p(e))return;if(!p(n))return;if("boolean"!=typeof t)return!1;let r=h();const a=c(r,e);if(!a)return;r=a[0];const o=a[1];let l=!1;o.length>2&&o[0][1]!==o[1][1]&&(l=!0);const i=Math.ceil((o.length-1)/2);let b=[];if(l?o.sort(((e,n)=>e[1]-n[1])):o.sort(((e,n)=>e[0]-n[0])),b=o[i],t&&(l=!l),t?(n[0]+=b[1]-e[1],n[1]+=b[0]-e[0]):(n[0]+=b[0]-e[0],n[1]+=b[1]-e[1]),A(r,o.length,n,l)){s=r;for(let e=0;e<o.length;e++)l?s[n[1]+(e-i)][n[0]]=1:s[n[1]][n[0]+(e-i)]=1}},deleteShip:e=>{if(u())return null;p(e)&&c(s,e)},receiveAttack:e=>{if(!u())return!1;if(!p(e))return!1;if(s[e[1]][e[0]]<2){1===s[e[1]][e[0]]?(s[e[1]][e[0]]=3,a.push(e)):s[e[1]][e[0]]=2,r.push(e);let n=JSON.parse(JSON.stringify(i));const t=c(n,e);if(t){let e=!0;for(let n=0;n<t[1].length;n++)if(1===s[t[1][n][1]][t[1][n][0]]){e=!1;break}e&&o.push(t[1])}return!0}},getCellStateAt:e=>p(e)?s[e[1]][e[0]]:null,checkDefeat:()=>{if(!u())return!1;for(let e=0;e<s.length;e++)for(let n=0;n<s[e].length;n++)if(1===s[e][n])return!1;return!0},isGameStarted:u,observeBoard:h,totalNumberOfShips:g,remainingNumberOfShips:()=>t?g()-o.length:g(),previousAttacks:()=>JSON.parse(JSON.stringify(r)),previousHits:()=>JSON.parse(JSON.stringify(a)),previousSinks:()=>JSON.parse(JSON.stringify(o))}};var o=t(379),l=t.n(o),s=t(795),i=t.n(s),b=t(569),A=t.n(b),d=t(565),c=t.n(d),p=t(216),u=t.n(p),h=t(589),g=t.n(h),m=t(28),C={};C.styleTagTransform=g(),C.setAttributes=c(),C.insert=A().bind(null,"head"),C.domAPI=i(),C.insertStyleElement=u(),l()(m.Z,C),m.Z&&m.Z.locals&&m.Z.locals;var B=t(786),f={};f.styleTagTransform=g(),f.setAttributes=c(),f.insert=A().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=u(),l()(B.Z,f),B.Z&&B.Z.locals&&B.Z.locals,(()=>{const e=(()=>{let e=!1,n=!1,t=0,o=[r(),r()];o[1].setStyle("Computer");let l=[a(10),a(10)];const s=()=>{n=!0,e=!1},i=async()=>{await setTimeout((()=>{const e=(t+1)%2,n=l[e];return o[t].takeComputerTurn(n,e),n.checkDefeat()?(s(),!0):(b(),!0)}),2)||i()},b=()=>{t=(t+1)%2,"Computer"===o[t].getStyle()&&i()};return{startGame:()=>{if(e||n)return null;e=!0,n=!1,"Computer"===o[0].getStyle()&&l[0].randomiseBoard(),"Computer"===o[1].getStyle()&&l[1].randomiseBoard(),l[0].startGame(),l[1].startGame(),t=Math.floor(2*Math.random()),"Computer"===o[t].getStyle()&&i()},endGame:s,resetGame:()=>{e=!1,n=!1,l[0].resetBoard(),l[1].resetBoard()},manualAttack:(r,a)=>{if(!(Number.isInteger(r)&&r>=0&&r<=1))return null;if(!e||n)return null;if("Computer"===o[t].getStyle())return null;if(t===r)return null;const i=l[(t+1)%2],A=i.previousAttacks().length;if(i.receiveAttack(a),A!==i.previousAttacks().length){if(i.checkDefeat())return void s();b()}},isGameStarted:()=>e,isGameEnded:()=>n,getPlayers:()=>o,getGameboards:()=>l,changeTurn:b,getTurn:()=>t}})();let t=3,o=!1,l=[0,0],s=!1,i=3,b=!1,A=[0,0],d=!1;const c=(e,n,t)=>{const r=document.createElement(e);return r instanceof HTMLUnknownElement?null:(Array.isArray(n)&&n.forEach((e=>{"string"==typeof e&&r.classList.add(e)})),t instanceof HTMLElement&&t.appendChild(r),r)},p={base:c("div",["btls-base"],document.body),title:null,boardArea:null,board1:null,b1XAxis:null,b1YAxis:null,b1ID:null,b1Buttons:null,b1ChangeStyleButton:null,b1HideShipsButton:null,b1PlaceShipBox:null,b1PlaceShipModel:null,b1PlaceShipSizeInput:null,b1PlaceShipRotationButton:null,b1PlaceShipXCoordInput:null,b1PlaceShipYCoordInput:null,b1PlaceShipPlaceButton:null,infoBox:null,board2:null,b2XAxis:null,b2YAxis:null,b2ID:null,b2Buttons:null,b2ChangeStyleButton:null,b2HideShipsButton:null,b2PlaceShipBox:null,b2PlaceShipModel:null,b2PlaceShipSizeInput:null,b2PlaceShipRotationButton:null,b2PlaceShipXCoordInput:null,b2PlaceShipYCoordInput:null,b2PlaceShipPlaceButton:null,buttons:null,startButton:null,resetButton:null},u=()=>{const n=e.getGameboards(),t=e.getPlayers();n[0].totalNumberOfShips()<1&&"Manual"===t[0].getStyle()||n[1].totalNumberOfShips()<1&&"Manual"===t[1].getStyle()?g("Please ensure all Manual players have at least one ship before starting the game"):(e.startGame(),e.isGameStarted()&&(p.boardArea.classList.remove("game-ended"),g(`Here we go! It's Player ${e.getTurn()+1} to move first.`),"Computer"===t[0].getStyle()&&B(e.getGameboards()[0],0,p.board1,!0),"Computer"===t[1].getStyle()&&B(e.getGameboards()[1],1,p.board2,!0)))},h=()=>{e.resetGame(),B(e.getGameboards()[0],0,p.board1,!1),B(e.getGameboards()[1],1,p.board2,!1),p.boardArea.classList.remove("game-ended"),g("Welcome to Battleship!")},g=e=>{p.infoBox.textContent=e},m=e=>e instanceof Element?c("div",["btls-cell"],e):null,C=(e,n)=>{switch(e.classList.remove("ship","hit","empty"),n){case 1:e.classList.add("ship");break;case 2:e.classList.add("attacked");break;case 3:e.classList.add("hit");break;default:e.classList.add("empty")}},B=(e,n,t,r)=>{if(!j(e))return null;if(!(Number.isInteger(n)&&n>=0&&n<=1))return null;if(!(t instanceof HTMLElement))return null;t.replaceChildren();const a=e.observeBoard();for(let e=0;e<a.length;e++)for(let o=0;o<a[e].length;o++){const l=m(t);C(l,r&&1===a[e][o]?0:a[e][o]),l.addEventListener("click",(()=>{T(l,[o,e],n)}))}},f=(n,t,r,a)=>{const o=e.getGameboards()[t].observeBoard();if(0===r)for(let e=0;e<o.length;e++)c("div",["btls-axis-no"],n).textContent=e;else for(let e=0;e<o[0].length;e++)c("div",["btls-axis-no"],n).textContent=e;a.appendChild(n)},y=(n,t)=>{let r,a,o;o=n+1,r=c("button",[`btls-b${o}-change-style-button`],t),r.textContent="Change Style",r.addEventListener("click",(()=>{E(n)})),a=c("button",[`btls-b${o}-hide-ships-button`],t),a.addEventListener("click",(()=>{O(n)})),0===n?(p.b1ChangeStyleButton=r,p.b1HideShipsButton=a):(p.b2ChangeStyleButton=r,p.b2HideShipsButton=a),"Computer"===e.getPlayers()[n].getStyle()&&O(n),M(n)},I=(e,n)=>{const r=e+1;let a=c("div",[`btls-b${r}-place-ship-box`],n);0===e?p.b1PlaceShipBox=a:p.b2PlaceShipBox=a;let l=c("div",[`btls-b${r}-place-ship-model`],a);l.style.display="grid",0===e?p.b1PlaceShipModel=l:p.b2PlaceShipModel=l,v(e,a),x(e,0,a),x(e,1,a),S(e,a),k(e,a),w(0===e?p.b1PlaceShipModel:p.b2PlaceShipModel,0===e?t:i,0===e?o:b)},v=(e,n)=>{let r,a,l;l=e+1,r=c("label",[`btls-b${l}-place-ship-size-label`],n),r.textContent="Size",r.setAttribute("for",`btls-b${l}-place-ship-size`),a=c("input",[`btls-b${l}-place-ship-size`],n),a.setAttribute("id",`btls-b${l}-place-ship-size`),a.setAttribute("type","number"),a.value=0===e?t:i,a.addEventListener("input",(()=>{a.value=Math.min(10,Math.max(1,a.value));const n=parseInt(a.value);0===e?t=n:i=n,w(0===e?p.b1PlaceShipModel:p.b2PlaceShipModel,0===e?t:i,0===e?o:b)})),0===e?p.b1PlaceShipSizeInput=a:p.b2PlaceShipSizeInput=a},x=(e,n,t)=>{let r,a,o,s;o=e+1,s=0===n?"x":"y",r=c("label",[`btls-b${o}-place-ship-${s}-coord-label`],t),r.textContent=`${s.toUpperCase()}-Coord: `,r.setAttribute("for",`btls-b${o}-place-ship-${s}-coord`),a=c("input",[`btls-b${o}-place-ship-${s}-coord`],t),a.setAttribute("id",`btls-b${o}-place-ship-${s}-coord`),a.setAttribute("type","number"),a.value=0===n?0===e?l[0]:A[0]:0===e?l[1]:A[1],a.addEventListener("input",(()=>{a.value=Math.min(9,Math.max(0,a.value));const t=parseInt(a.value);0===n?0===e?l[0]=t:A[0]=t:0===e?l[1]=t:A[1]=t})),0===n?0===e?p.b1PlaceShipXCoordInput=a:p.b2PlaceShipXCoordInput=a:0===e?p.b1PlaceShipYCoordInput=a:p.b2PlaceShipYCoordInput=a},S=(e,n)=>{let r,a;a=e+1,r=c("button",[`btls-b${a}-place-ship-rotation`],n),r.textContent="Rotate Ship",r.addEventListener("click",(()=>{0===e?o=!o:b=!b,w(0===e?p.b1PlaceShipModel:p.b2PlaceShipModel,0===e?t:i,0===e?o:b)})),0===e?p.b1PlaceShipRotationButton=r:p.b2PlaceShipRotationButton=r},k=(e,n)=>{let t,r;r=e+1,t=c("button",[`btls-b${r}-place-ship`],n),t.textContent="Place Ship",t.addEventListener("click",(()=>{z(e)})),0===e?p.b1PlaceShipPlaceButton=t:p.b2PlaceShipPlaceButton=t},w=(e,n,t)=>{e.replaceChildren();for(let t=0;t<n;t++)c("div",["btls-model-cell"],e);t?(e.style["grid-template-rows"]=`repeat(${n}, auto)`,e.style["grid-template-columns"]="auto",e.style.width="10%",e.style.height=10*n+"%"):(e.style["grid-template-rows"]="auto",e.style["grid-template-columns"]=`repeat(${n}, auto)`,e.style.width=10*n+"%",e.style.height="10%")},E=n=>{if(e.isGameStarted()||e.isGameEnded())return;const t=e.getPlayers(),r="Manual"===t[n].getStyle()?"Computer":"Manual";t[n].setStyle(r),"Computer"===r&&(O(n),e.getGameboards()[n].resetBoard(),B(e.getGameboards()[n],n,0===n?p.board1:p.board2,!0)),P(n)},P=n=>{const t=e.getPlayers();0===n?p.b1ID.textContent=`Player One: ${t[n].getStyle()}`:p.b2ID.textContent=`Player Two: ${t[n].getStyle()}`},O=n=>{const t=0===n?p.board1:p.board2;"Computer"===e.getPlayers()[n].getStyle()?(t.classList.add("ships-hidden"),0===n?s=!0:d=!0):t.classList.contains("ships-hidden")?(t.classList.remove("ships-hidden"),0===n?s=!1:d=!1):(t.classList.add("ships-hidden"),0===n?s=!0:d=!0),M(n)},M=e=>{const n=0===e?s:d;(0===e?p.b1HideShipsButton:p.b2HideShipsButton).textContent=n?"Show Ships":"Hide Ships"},z=n=>{"Computer"!==e.getPlayers()[n].getStyle()&&(e.isGameStarted()||e.isGameEnded()||(e.getGameboards()[n].placeShip(0===n?t:i,0===n?l:A,0===n?o:b),0===n?B(e.getGameboards()[0],0,p.board1,!1):B(e.getGameboards()[1],1,p.board2,!1)))},T=(n,t,r)=>{e.isGameStarted()&&!e.isGameEnded()&&null!==e.manualAttack(r,t)&&G(n,t,r)};n().subscribe("BATTLESHIP-COMPUTER-ATTACKED-POSITION",((e,n)=>{let[...t]=n;const r=t[0],a=t[1],o=0===a?p.board1.children[10*r[1]+r[0]]:p.board2.children[10*r[1]+r[0]];G(o,r,a)}));const G=(n,t,r)=>{let a,o;o=e.getGameboards()[r],a=o.getCellStateAt(t),C(n,a),g(`Player ${(e.getTurn()+1)%2+1} attacks position [${t[0]}, ${t[1]}]. It is ${3===a?"":"not "} a successful hit. It's Player ${e.getTurn()+1}'s move.`),e.isGameEnded()&&(B(e.getGameboards()[0],0,p.board1,!1),B(e.getGameboards()[1],1,p.board2,!1),p.boardArea.classList.add("game-ended"),g(`The game has been won! Player ${e.getTurn()+1} is the winner!`))},j=e=>null===e||"object"!=typeof e?null:!!Object.hasOwn(e,"observeBoard")||null;return{ele:p,game:e,displayGame:()=>{p.base.remove(),p.base=c("div",["btls-base"],document.body),p.base=c("div",["btls-base"],document.body),p.title=c("div",["btls-title"],p.base),p.boardArea=c("div",["btls-board-area"],p.base),p.board2=c("div",["btls-board-two"],p.boardArea),p.b2XAxis=c("div",["btls-axis-2-x"],p.boardArea),p.b2YAxis=c("div",["btls-axis-2-y"],p.boardArea),p.b2Buttons=c("div",["btls-b2-btns"],p.boardArea),p.b2ID=c("div",["btls-b2-id"],p.boardArea),p.infoBox=c("div",["btls-info-box"],p.boardArea),p.b1ID=c("div",["btls-b1-id"],p.boardArea),p.board1=c("div",["btls-board-one"],p.boardArea),p.b1XAxis=c("div",["btls-axis-1-x"],p.boardArea),p.b1YAxis=c("div",["btls-axis-1-y"],p.boardArea),p.b1Buttons=c("div",["btls-b1-btns"],p.boardArea),B(e.getGameboards()[0],0,p.board1,!1),B(e.getGameboards()[1],1,p.board2,!1),f(p.b1XAxis,0,0,p.boardArea),f(p.b1YAxis,0,1,p.boardArea),f(p.b2XAxis,1,0,p.boardArea),f(p.b2YAxis,1,1,p.boardArea),p.title.textContent="BATTLESHIP",P(0),P(1),g("Welcome to Battleship!"),y(1,p.b2Buttons),y(0,p.b1Buttons),p.buttons=c("div",["btls-buttons"],p.base),p.startButton=c("button",["btls-start"],p.buttons),p.startButton.addEventListener("click",u),p.resetButton=c("button",["btls-reset"],p.buttons),p.resetButton.addEventListener("click",h),p.startButton.textContent="Start Game",p.resetButton.textContent="Reset Game",I(0,p.boardArea),I(1,p.boardArea)},createElement:c,createCell:m,createBoard:B}})().displayGame()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,