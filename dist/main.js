(()=>{var e={786:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(537),a=t.n(r),l=t(645),o=t.n(l)()(a());o.push([e.id,":root {\n    --battleship-history-box-width: 8rem;\n    --battleship-board-size: 20rem;\n    --battleship-info-box-height: 4rem;\n    --battleship-place-ship-box-width: 8rem;\n}\n\n* {\n    -webkit-touch-callout: none;    /* iOS Safari */\n    -webkit-user-select: none;      /* Safari */\n    -khtml-user-select: none;       /* Konqueror HTML */\n    -moz-user-select: none;         /* Old versions of Firefox */\n    -ms-user-select: none;          /* Internet Explorer/Edge */\n    user-select: none;              /* Non-prefixed version, currently\n                                       supported by Chrome, Edge, Opera and Firefox */\n}\n\n.btls-base {\n    display: grid;\n    grid-template-rows: repeat(3, auto); \n    grid-template-columns: repeat(2, auto); \n    border: 1px solid black;\n}\n\n.btls-title {\n    grid-area: 1 / 1 / 2 / -1;\n    font-size: 3rem;\n    text-align: center;\n}\n\n.btls-board-area {\n    grid-area: 2 / 1 / 3 / 2;\n    display: grid;\n    grid-template-rows:  auto var(--battleship-board-size, 24rem) auto var(--battleship-info-box-height, 3rem) auto var(--battleship-board-size, 24rem) auto;\n    grid-template-columns: auto var(--battleship-board-size, 24rem) var(--battleship-place-ship-box-width, 10rem);\n    padding: 0.5rem;\n}\n\n.btls-board-one,\n.btls-board-two {\n    display: grid;\n    grid-template-rows: repeat(10, auto);\n    grid-template-columns: repeat(10, auto);\n    padding: 0.5rem;\n    gap: 0.2rem;\n}\n\n.btls-axis-1-x,\n.btls-axis-1-y,\n.btls-axis-2-x,\n.btls-axis-2-y {\n    display: flex;\n    justify-content: space-around;\n    text-align: center;\n    vertical-align: center;\n}\n\n.btls-board-one {\n    grid-area: -3 / 2 / -2 / 3;\n}\n.btls-axis-1-x {\n    grid-area: -2 / 2 / -1 / 3;\n    padding: 0rem 0.5rem;\n}\n.btls-axis-1-y {\n    grid-area: -3 / 1 / -2 / 2;\n    flex-direction: column;\n    padding: 0.5rem 0rem;\n}\n.btls-board-two {\n    grid-area: 2 / 2 / 3 / 3;\n}\n.btls-axis-2-x {\n    grid-area: 1 / 2 / 2 / 3;\n    padding: 0rem 0.5rem;\n}\n.btls-axis-2-y {\n    grid-area: 2 / 1 / 3 / 2;\n    flex-direction: column;\n    padding: 0.5rem 0rem;\n}\n\n.btls-axis-no {\n    padding: 0rem;\n    margin: 0rem;\n}\n\n.btls-b1-id,\n.btls-b2-id {\n    font-size: 0.8rem;\n    text-align: center;\n    vertical-align: center;\n}\n\n.btls-b1-id {\n    grid-area: -4 / 2 / -3 / 3;\n}\n.btls-b2-id {\n    grid-area: 3 / 2 / 4 / 3;\n}\n\n.btls-b1-btns,\n.btls-b2-btns {\n    display: flex;\n    justify-content: center;\n    gap: 0.3rem;\n}\n.btls-b1-btns {\n    grid-area: -4 / 3 / -3 / 4;\n}\n.btls-b2-btns {\n    grid-area: 3 / 3 / 4 / 4;\n}\n\n.btls-b1-change-style-button,\n.btls-b2-change-style-button,\n.btls-b1-hide-ships-button,\n.btls-b2-hide-ships-button {\n    font-size: 0.5rem;\n    border-radius: 9999px;\n    outline: none;\n    border: none;\n    padding: 0.3rem 0.4rem;\n}\n\n.btls-b1-change-style-button,\n.btls-b2-change-style-button {\n    background-color: #5bd656;\n}\n.btls-b1-change-style-button:hover,\n.btls-b2-change-style-button:hover {\n    background-color: #6bf566;\n}\n.btls-b1-change-style-button:active,\n.btls-b2-change-style-button:active {\n    background-color: #31ac2c;\n}\n.btls-b1-hide-ships-button,\n.btls-b2-hide-ships-button {\n    background-color: #ecc825;\n}\n.btls-b1-hide-ships-button:hover,\n.btls-b2-hide-ships-button:hover {\n    background-color: #fcdc4e;\n}\n.btls-b1-hide-ships-button:active,\n.btls-b2-hide-ships-button:active {\n    background-color: #d4b216;\n}\n\n.btls-info-box {\n    grid-area: -5 / 2 / -4 / 3;\n    display: flex;\n    flex-direction: column;\n    place-content: center;\n    align-items: center;\n    text-align: center;\n    padding: 0.5rem;\n}\n\n.btls-b1-place-ship-box,\n.btls-b2-place-ship-box {\n    display: grid;\n    grid-template-rows: 1fr repeat(4, auto);\n    grid-template-columns: repeat(2, calc(50% - 0.1rem));\n    align-items: center;\n    width: calc(var(--battleship-place-ship-box-width, 10rem) - 0.2rem);\n    padding: 0.5rem 0rem;\n    gap: 0.4rem 0.2rem;\n}\n.btls-b1-place-ship-box {\n    grid-area: 6 / -2 / 7 / -1;\n}\n.btls-b2-place-ship-box {\n    grid-area: 2 / -2 / 3 / -1;\n}\n\n.btls-b1-place-ship-model,\n.btls-b2-place-ship-model {\n    grid-area: 1 / 1 / 2 / -1;\n    place-self: center;\n    width: 100%;\n    height: 100%;\n    gap: 0.2rem;\n}\n\n.btls-model-cell {\n    outline: 1px solid black;\n}\n\n.btls-mouse-track-model {\n    position: absolute;\n}\n\n.btls-mouse-track-model-cell {\n    width: 1rem;\n    height: 1rem;\n    border: 1px solid #000;\n}\n\n.btls-b1-place-ship-size-label,\n.btls-b2-place-ship-size-label,\n.btls-b1-place-ship-x-coord-label,\n.btls-b2-place-ship-x-coord-label,\n.btls-b1-place-ship-y-coord-label,\n.btls-b2-place-ship-y-coord-label {\n    font-size: 0.8rem;\n    text-align: center;\n}\n.btls-b1-place-ship-size-label,\n.btls-b2-place-ship-size-label {\n    grid-area: 2 / 1 / 3 / 2;\n}\n.btls-b1-place-ship-x-coord-label,\n.btls-b2-place-ship-x-coord-label {\n    grid-area: 3 / 1 / 4 / 2;\n}\n.btls-b1-place-ship-y-coord-label,\n.btls-b2-place-ship-y-coord-label {\n    grid-area: 4 / 1 / 5 / 2;\n}\n\n.btls-b1-place-ship-size,\n.btls-b2-place-ship-size,\n.btls-b1-place-ship-x-coord,\n.btls-b2-place-ship-x-coord,\n.btls-b1-place-ship-y-coord,\n.btls-b2-place-ship-y-coord {\n    font-size: 1rem;\n    border-radius: 9999px;\n    padding: 0.1rem 0.3rem;\n    border: none;\n    outline: 1px solid black;\n}\n.btls-b1-place-ship-size,\n.btls-b2-place-ship-size {\n    grid-area: 2 / 2 / 3 / 3;\n}\n.btls-b1-place-ship-x-coord,\n.btls-b2-place-ship-x-coord {\n    grid-area: 3 / 2 / 4 / 3;\n}\n.btls-b1-place-ship-y-coord,\n.btls-b2-place-ship-y-coord {\n    grid-area: 4 / 2 / 5 / 3;\n}\n\n.btls-b1-place-ship-rotation,\n.btls-b2-place-ship-rotation,\n.btls-b1-place-ship,\n.btls-b2-place-ship {\n    font-size: 0.8rem;\n    border-radius: 9999px;\n    outline: none;\n    border: none;\n    padding: 0.3rem 0.1rem;\n}\n\n.btls-b1-place-ship-rotation,\n.btls-b2-place-ship-rotation {\n    grid-area: 5 / 1 / 6 / -1;\n    background-color: #fa8bde;\n}\n.btls-b1-place-ship-rotation:hover,\n.btls-b2-place-ship-rotation:hover {\n    background-color: #ffabea;\n}\n.btls-b1-place-ship-rotation:active,\n.btls-b2-place-ship-rotation:active {\n    background-color: #d64ab3;\n}\n\n.btls-b1-place-ship,\n.btls-b2-place-ship {\n    grid-area: 6 / 1 / 7 / -1;\n    background-color: #9b8afc;\n}\n.btls-b1-place-ship:hover,\n.btls-b2-place-ship:hover {\n    background-color: #b5a8ff;\n}\n.btls-b1-place-ship:active,\n.btls-b2-place-ship:active {\n    background-color: #7e68fc;\n}\n\n.btls-buttons {\n    grid-area: 3 / 1 / -1 / -1;\n    display: flex;\n    justify-content: center;\n    gap: 0.5rem;\n}\n\n.btls-start,\n.btls-reset {\n    font-size: 0.8rem;\n    border-radius: 9999px;\n    background-color: #fa8bde;\n    outline: none;\n    border: none;\n    padding: 0.5rem 0.8rem;\n    margin: 0.8rem 0rem;\n}\n.btls-start {\n    background-color: #60e654;\n}\n.btls-start:hover {\n    background-color: #80f775;\n}\n.btls-start:active {\n    background-color: #49d13d;\n}\n.btls-reset {\n    background-color: #eb6767;\n}\n.btls-reset:hover {\n    background-color: #eb7f7f;\n}\n.btls-reset:active {\n    background-color: #dd4e4e;\n}\n\n.btls-cell {\n    outline: 1px solid black;\n}\n.btls-board-area:not(.game-ended) .btls-cell:hover {\n    outline: 2px solid black;\n}\n\n.btls-cell.empty {\n    background-color: rgb(255, 255, 255);\n}\n.btls-board-area:not(.game-ended) .btls-cell.empty:hover {\n    background-color: #ececec;\n}\n.btls-board-area:not(.game-ended) .btls-cell.empty:active {\n    background-color: #d1d1d1;\n}\n.btls-board-area:not(.game-ended) .btls-board-one:not(.ships-hidden) > .btls-cell.ship,\n.btls-board-area.game-ended .btls-board-one:not(.ships-hidden) > .btls-cell.ship,\n.btls-board-area.game-ended .btls-board-one.ships-hidden > .btls-cell.ship {\n    background-color: rgb(50, 171, 187);\n}\n.btls-board-area:not(.game-ended) .btls-board-one:not(.ships-hidden) > .btls-cell.ship:hover {\n    background-color: rgb(88, 202, 218);\n}\n.btls-board-area:not(.game-ended) .btls-board-two:not(.ships-hidden) > .btls-cell.ship,\n.btls-board-area.game-ended .btls-board-two:not(.ships-hidden) > .btls-cell.ship,\n.btls-board-area.game-ended .btls-board-two.ships-hidden > .btls-cell.ship {\n    background-color: rgb(50, 171, 187);\n}\n.btls-board-area:not(.game-ended) .btls-board-two:not(.ships-hidden) > .btls-cell.ship:hover {\n    background-color: rgb(88, 202, 218);\n}\n.btls-cell.attacked {\n    background-color: rgb(194, 76, 76);\n}\n.btls-board-area:not(.game-ended) .btls-cell.attacked:hover {\n    background-color: rgb(211, 101, 101);\n}\n.btls-cell.hit {\n    background-color: rgb(98, 212, 69);\n}\n.btls-board-area:not(.game-ended) .btls-cell.hit:hover {\n    background-color: rgb(124, 236, 96);\n}","",{version:3,sources:["webpack://./src/DOM/DOM-styles.css"],names:[],mappings:"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",sourcesContent:[":root {\n    --battleship-history-box-width: 8rem;\n    --battleship-board-size: 20rem;\n    --battleship-info-box-height: 4rem;\n    --battleship-place-ship-box-width: 8rem;\n}\n\n* {\n    -webkit-touch-callout: none;    /* iOS Safari */\n    -webkit-user-select: none;      /* Safari */\n    -khtml-user-select: none;       /* Konqueror HTML */\n    -moz-user-select: none;         /* Old versions of Firefox */\n    -ms-user-select: none;          /* Internet Explorer/Edge */\n    user-select: none;              /* Non-prefixed version, currently\n                                       supported by Chrome, Edge, Opera and Firefox */\n}\n\n.btls-base {\n    display: grid;\n    grid-template-rows: repeat(3, auto); \n    grid-template-columns: repeat(2, auto); \n    border: 1px solid black;\n}\n\n.btls-title {\n    grid-area: 1 / 1 / 2 / -1;\n    font-size: 3rem;\n    text-align: center;\n}\n\n.btls-board-area {\n    grid-area: 2 / 1 / 3 / 2;\n    display: grid;\n    grid-template-rows:  auto var(--battleship-board-size, 24rem) auto var(--battleship-info-box-height, 3rem) auto var(--battleship-board-size, 24rem) auto;\n    grid-template-columns: auto var(--battleship-board-size, 24rem) var(--battleship-place-ship-box-width, 10rem);\n    padding: 0.5rem;\n}\n\n.btls-board-one,\n.btls-board-two {\n    display: grid;\n    grid-template-rows: repeat(10, auto);\n    grid-template-columns: repeat(10, auto);\n    padding: 0.5rem;\n    gap: 0.2rem;\n}\n\n.btls-axis-1-x,\n.btls-axis-1-y,\n.btls-axis-2-x,\n.btls-axis-2-y {\n    display: flex;\n    justify-content: space-around;\n    text-align: center;\n    vertical-align: center;\n}\n\n.btls-board-one {\n    grid-area: -3 / 2 / -2 / 3;\n}\n.btls-axis-1-x {\n    grid-area: -2 / 2 / -1 / 3;\n    padding: 0rem 0.5rem;\n}\n.btls-axis-1-y {\n    grid-area: -3 / 1 / -2 / 2;\n    flex-direction: column;\n    padding: 0.5rem 0rem;\n}\n.btls-board-two {\n    grid-area: 2 / 2 / 3 / 3;\n}\n.btls-axis-2-x {\n    grid-area: 1 / 2 / 2 / 3;\n    padding: 0rem 0.5rem;\n}\n.btls-axis-2-y {\n    grid-area: 2 / 1 / 3 / 2;\n    flex-direction: column;\n    padding: 0.5rem 0rem;\n}\n\n.btls-axis-no {\n    padding: 0rem;\n    margin: 0rem;\n}\n\n.btls-b1-id,\n.btls-b2-id {\n    font-size: 0.8rem;\n    text-align: center;\n    vertical-align: center;\n}\n\n.btls-b1-id {\n    grid-area: -4 / 2 / -3 / 3;\n}\n.btls-b2-id {\n    grid-area: 3 / 2 / 4 / 3;\n}\n\n.btls-b1-btns,\n.btls-b2-btns {\n    display: flex;\n    justify-content: center;\n    gap: 0.3rem;\n}\n.btls-b1-btns {\n    grid-area: -4 / 3 / -3 / 4;\n}\n.btls-b2-btns {\n    grid-area: 3 / 3 / 4 / 4;\n}\n\n.btls-b1-change-style-button,\n.btls-b2-change-style-button,\n.btls-b1-hide-ships-button,\n.btls-b2-hide-ships-button {\n    font-size: 0.5rem;\n    border-radius: 9999px;\n    outline: none;\n    border: none;\n    padding: 0.3rem 0.4rem;\n}\n\n.btls-b1-change-style-button,\n.btls-b2-change-style-button {\n    background-color: #5bd656;\n}\n.btls-b1-change-style-button:hover,\n.btls-b2-change-style-button:hover {\n    background-color: #6bf566;\n}\n.btls-b1-change-style-button:active,\n.btls-b2-change-style-button:active {\n    background-color: #31ac2c;\n}\n.btls-b1-hide-ships-button,\n.btls-b2-hide-ships-button {\n    background-color: #ecc825;\n}\n.btls-b1-hide-ships-button:hover,\n.btls-b2-hide-ships-button:hover {\n    background-color: #fcdc4e;\n}\n.btls-b1-hide-ships-button:active,\n.btls-b2-hide-ships-button:active {\n    background-color: #d4b216;\n}\n\n.btls-info-box {\n    grid-area: -5 / 2 / -4 / 3;\n    display: flex;\n    flex-direction: column;\n    place-content: center;\n    align-items: center;\n    text-align: center;\n    padding: 0.5rem;\n}\n\n.btls-b1-place-ship-box,\n.btls-b2-place-ship-box {\n    display: grid;\n    grid-template-rows: 1fr repeat(4, auto);\n    grid-template-columns: repeat(2, calc(50% - 0.1rem));\n    align-items: center;\n    width: calc(var(--battleship-place-ship-box-width, 10rem) - 0.2rem);\n    padding: 0.5rem 0rem;\n    gap: 0.4rem 0.2rem;\n}\n.btls-b1-place-ship-box {\n    grid-area: 6 / -2 / 7 / -1;\n}\n.btls-b2-place-ship-box {\n    grid-area: 2 / -2 / 3 / -1;\n}\n\n.btls-b1-place-ship-model,\n.btls-b2-place-ship-model {\n    grid-area: 1 / 1 / 2 / -1;\n    place-self: center;\n    width: 100%;\n    height: 100%;\n    gap: 0.2rem;\n}\n\n.btls-model-cell {\n    outline: 1px solid black;\n}\n\n.btls-mouse-track-model {\n    position: absolute;\n}\n\n.btls-mouse-track-model-cell {\n    width: 1rem;\n    height: 1rem;\n    border: 1px solid #000;\n}\n\n.btls-b1-place-ship-size-label,\n.btls-b2-place-ship-size-label,\n.btls-b1-place-ship-x-coord-label,\n.btls-b2-place-ship-x-coord-label,\n.btls-b1-place-ship-y-coord-label,\n.btls-b2-place-ship-y-coord-label {\n    font-size: 0.8rem;\n    text-align: center;\n}\n.btls-b1-place-ship-size-label,\n.btls-b2-place-ship-size-label {\n    grid-area: 2 / 1 / 3 / 2;\n}\n.btls-b1-place-ship-x-coord-label,\n.btls-b2-place-ship-x-coord-label {\n    grid-area: 3 / 1 / 4 / 2;\n}\n.btls-b1-place-ship-y-coord-label,\n.btls-b2-place-ship-y-coord-label {\n    grid-area: 4 / 1 / 5 / 2;\n}\n\n.btls-b1-place-ship-size,\n.btls-b2-place-ship-size,\n.btls-b1-place-ship-x-coord,\n.btls-b2-place-ship-x-coord,\n.btls-b1-place-ship-y-coord,\n.btls-b2-place-ship-y-coord {\n    font-size: 1rem;\n    border-radius: 9999px;\n    padding: 0.1rem 0.3rem;\n    border: none;\n    outline: 1px solid black;\n}\n.btls-b1-place-ship-size,\n.btls-b2-place-ship-size {\n    grid-area: 2 / 2 / 3 / 3;\n}\n.btls-b1-place-ship-x-coord,\n.btls-b2-place-ship-x-coord {\n    grid-area: 3 / 2 / 4 / 3;\n}\n.btls-b1-place-ship-y-coord,\n.btls-b2-place-ship-y-coord {\n    grid-area: 4 / 2 / 5 / 3;\n}\n\n.btls-b1-place-ship-rotation,\n.btls-b2-place-ship-rotation,\n.btls-b1-place-ship,\n.btls-b2-place-ship {\n    font-size: 0.8rem;\n    border-radius: 9999px;\n    outline: none;\n    border: none;\n    padding: 0.3rem 0.1rem;\n}\n\n.btls-b1-place-ship-rotation,\n.btls-b2-place-ship-rotation {\n    grid-area: 5 / 1 / 6 / -1;\n    background-color: #fa8bde;\n}\n.btls-b1-place-ship-rotation:hover,\n.btls-b2-place-ship-rotation:hover {\n    background-color: #ffabea;\n}\n.btls-b1-place-ship-rotation:active,\n.btls-b2-place-ship-rotation:active {\n    background-color: #d64ab3;\n}\n\n.btls-b1-place-ship,\n.btls-b2-place-ship {\n    grid-area: 6 / 1 / 7 / -1;\n    background-color: #9b8afc;\n}\n.btls-b1-place-ship:hover,\n.btls-b2-place-ship:hover {\n    background-color: #b5a8ff;\n}\n.btls-b1-place-ship:active,\n.btls-b2-place-ship:active {\n    background-color: #7e68fc;\n}\n\n.btls-buttons {\n    grid-area: 3 / 1 / -1 / -1;\n    display: flex;\n    justify-content: center;\n    gap: 0.5rem;\n}\n\n.btls-start,\n.btls-reset {\n    font-size: 0.8rem;\n    border-radius: 9999px;\n    background-color: #fa8bde;\n    outline: none;\n    border: none;\n    padding: 0.5rem 0.8rem;\n    margin: 0.8rem 0rem;\n}\n.btls-start {\n    background-color: #60e654;\n}\n.btls-start:hover {\n    background-color: #80f775;\n}\n.btls-start:active {\n    background-color: #49d13d;\n}\n.btls-reset {\n    background-color: #eb6767;\n}\n.btls-reset:hover {\n    background-color: #eb7f7f;\n}\n.btls-reset:active {\n    background-color: #dd4e4e;\n}\n\n.btls-cell {\n    outline: 1px solid black;\n}\n.btls-board-area:not(.game-ended) .btls-cell:hover {\n    outline: 2px solid black;\n}\n\n.btls-cell.empty {\n    background-color: rgb(255, 255, 255);\n}\n.btls-board-area:not(.game-ended) .btls-cell.empty:hover {\n    background-color: #ececec;\n}\n.btls-board-area:not(.game-ended) .btls-cell.empty:active {\n    background-color: #d1d1d1;\n}\n.btls-board-area:not(.game-ended) .btls-board-one:not(.ships-hidden) > .btls-cell.ship,\n.btls-board-area.game-ended .btls-board-one:not(.ships-hidden) > .btls-cell.ship,\n.btls-board-area.game-ended .btls-board-one.ships-hidden > .btls-cell.ship {\n    background-color: rgb(50, 171, 187);\n}\n.btls-board-area:not(.game-ended) .btls-board-one:not(.ships-hidden) > .btls-cell.ship:hover {\n    background-color: rgb(88, 202, 218);\n}\n.btls-board-area:not(.game-ended) .btls-board-two:not(.ships-hidden) > .btls-cell.ship,\n.btls-board-area.game-ended .btls-board-two:not(.ships-hidden) > .btls-cell.ship,\n.btls-board-area.game-ended .btls-board-two.ships-hidden > .btls-cell.ship {\n    background-color: rgb(50, 171, 187);\n}\n.btls-board-area:not(.game-ended) .btls-board-two:not(.ships-hidden) > .btls-cell.ship:hover {\n    background-color: rgb(88, 202, 218);\n}\n.btls-cell.attacked {\n    background-color: rgb(194, 76, 76);\n}\n.btls-board-area:not(.game-ended) .btls-cell.attacked:hover {\n    background-color: rgb(211, 101, 101);\n}\n.btls-cell.hit {\n    background-color: rgb(98, 212, 69);\n}\n.btls-board-area:not(.game-ended) .btls-cell.hit:hover {\n    background-color: rgb(124, 236, 96);\n}"],sourceRoot:""}]);const s=o},28:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(537),a=t.n(r),l=t(645),o=t.n(l)()(a());o.push([e.id,":root {\n    font-size: 20px;\n}\n\n.no-select {\n    -webkit-touch-callout: none;    /* iOS Safari */\n    -webkit-user-select: none;      /* Safari */\n    -khtml-user-select: none;       /* Konqueror HTML */\n    -moz-user-select: none;         /* Old versions of Firefox */\n    -ms-user-select: none;          /* Internet Explorer/Edge */\n    user-select: none;              /* Non-prefixed version, currently\n                                       supported by Chrome, Edge, Opera and Firefox */\n}\n\nh1, h2, h3, h4, h5, h6 {\n    padding: 0px;\n    margin: 0px;\n}\n\nbody {\n    margin: 0;\n    min-width: 100vw;\n    min-height: 100vh;\n    display: grid;\n    justify-content: center;\n    align-content: center;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,eAAe;AACnB;;AAEA;IACI,2BAA2B,KAAK,eAAe;IAC/C,yBAAyB,OAAO,WAAW;IAC3C,wBAAwB,QAAQ,mBAAmB;IACnD,sBAAsB,UAAU,4BAA4B;IAC5D,qBAAqB,WAAW,2BAA2B;IAC3D,iBAAiB,eAAe;qFACiD;AACrF;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,SAAS;IACT,gBAAgB;IAChB,iBAAiB;IACjB,aAAa;IACb,uBAAuB;IACvB,qBAAqB;AACzB",sourcesContent:[":root {\n    font-size: 20px;\n}\n\n.no-select {\n    -webkit-touch-callout: none;    /* iOS Safari */\n    -webkit-user-select: none;      /* Safari */\n    -khtml-user-select: none;       /* Konqueror HTML */\n    -moz-user-select: none;         /* Old versions of Firefox */\n    -ms-user-select: none;          /* Internet Explorer/Edge */\n    user-select: none;              /* Non-prefixed version, currently\n                                       supported by Chrome, Edge, Opera and Firefox */\n}\n\nh1, h2, h3, h4, h5, h6 {\n    padding: 0px;\n    margin: 0px;\n}\n\nbody {\n    margin: 0;\n    min-width: 100vw;\n    min-height: 100vh;\n    display: grid;\n    justify-content: center;\n    align-content: center;\n}"],sourceRoot:""}]);const s=o},645:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,l){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(r)for(var s=0;s<this.length;s++){var i=this[s][0];null!=i&&(o[i]=!0)}for(var b=0;b<e.length;b++){var A=[].concat(e[b]);r&&o[A[0]]||(void 0!==l&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=l),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),n.push(A))}},n}},537:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),l="/*# ".concat(a," */");return[n].concat([l]).join("\n")}return[n].join("\n")}},798:function(e,n,t){e=t.nmd(e),function(t,r){"use strict";var a={};t.PubSub?(a=t.PubSub,console.warn("PubSub already loaded, using existing version")):(t.PubSub=a,function(e){var n={},t=-1,r="*";function a(e,n,t){try{e(n,t)}catch(e){setTimeout(function(e){return function(){throw e}}(e),0)}}function l(e,n,t){e(n,t)}function o(e,t,r,o){var s,i=n[t],b=o?l:a;if(Object.prototype.hasOwnProperty.call(n,t))for(s in i)Object.prototype.hasOwnProperty.call(i,s)&&b(i[s],e,r)}function s(e){var t=String(e);return Boolean(Object.prototype.hasOwnProperty.call(n,t)&&function(e){var n;for(n in e)if(Object.prototype.hasOwnProperty.call(e,n))return!0;return!1}(n[t]))}function i(e,n,t,a){var l=function(e,n,t){return function(){var a=String(e),l=a.lastIndexOf(".");for(o(e,e,n,t);-1!==l;)l=(a=a.substr(0,l)).lastIndexOf("."),o(e,a,n,t);o(e,r,n,t)}}(e="symbol"==typeof e?e.toString():e,n,a);return!!function(e){for(var n=String(e),t=s(n)||s(r),a=n.lastIndexOf(".");!t&&-1!==a;)a=(n=n.substr(0,a)).lastIndexOf("."),t=s(n);return t}(e)&&(!0===t?l():setTimeout(l,0),!0)}e.publish=function(n,t){return i(n,t,!1,e.immediateExceptions)},e.publishSync=function(n,t){return i(n,t,!0,e.immediateExceptions)},e.subscribe=function(e,r){if("function"!=typeof r)return!1;e="symbol"==typeof e?e.toString():e,Object.prototype.hasOwnProperty.call(n,e)||(n[e]={});var a="uid_"+String(++t);return n[e][a]=r,a},e.subscribeAll=function(n){return e.subscribe(r,n)},e.subscribeOnce=function(n,t){var r=e.subscribe(n,(function(){e.unsubscribe(r),t.apply(this,arguments)}));return e},e.clearAllSubscriptions=function(){n={}},e.clearSubscriptions=function(e){var t;for(t in n)Object.prototype.hasOwnProperty.call(n,t)&&0===t.indexOf(e)&&delete n[t]},e.countSubscriptions=function(e){var t,r,a=0;for(t in n)if(Object.prototype.hasOwnProperty.call(n,t)&&0===t.indexOf(e)){for(r in n[t])a++;break}return a},e.getSubscriptions=function(e){var t,r=[];for(t in n)Object.prototype.hasOwnProperty.call(n,t)&&0===t.indexOf(e)&&r.push(t);return r},e.unsubscribe=function(t){var r,a,l,o="string"==typeof t&&(Object.prototype.hasOwnProperty.call(n,t)||function(e){var t;for(t in n)if(Object.prototype.hasOwnProperty.call(n,t)&&0===t.indexOf(e))return!0;return!1}(t)),s=!o&&"string"==typeof t,i="function"==typeof t,b=!1;if(!o){for(r in n)if(Object.prototype.hasOwnProperty.call(n,r)){if(a=n[r],s&&a[t]){delete a[t],b=t;break}if(i)for(l in a)Object.prototype.hasOwnProperty.call(a,l)&&a[l]===t&&(delete a[l],b=!0)}return b}e.clearSubscriptions(t)}}(a)),void 0!==e&&e.exports&&(n=e.exports=a),n.PubSub=a,e.exports=n=a}("object"==typeof window&&window||this)},379:e=>{"use strict";var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var l={},o=[],s=0;s<e.length;s++){var i=e[s],b=r.base?i[0]+r.base:i[0],A=l[b]||0,d="".concat(b," ").concat(A);l[b]=A+1;var c=t(d),p={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==c)n[c].references++,n[c].updater(p);else{var u=a(p,r);r.byIndex=s,n.splice(s,0,{identifier:d,updater:u,references:1})}o.push(d)}return o}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var l=r(e=e||[],a=a||{});return function(e){e=e||[];for(var o=0;o<l.length;o++){var s=t(l[o]);n[s].references--}for(var i=r(e,a),b=0;b<l.length;b++){var A=t(l[b]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}l=i}}},569:e=>{"use strict";var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var l=t.sourceMap;l&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(l))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var l=n[r]={id:r,loaded:!1,exports:{}};return e[r].call(l.exports,l,l.exports,t),l.loaded=!0,l.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),t.nc=void 0,(()=>{"use strict";var e=t(798),n=t.n(e);const r=()=>{let e="Manual";const t=(e,n)=>{for(let t=0;t<n.length;t++)if(e[0]===n[t][0]&&e[1]===n[t][1])return t;return-1},r=(e,n)=>n[0]*e+n[1];return{setStyle:n=>{"Manual"!==n&&"Computer"!==n||(e=n)},getStyle:()=>e,takeComputerTurn:(e,a)=>{const l=e.previousHits(),o=e.previousSinks(),s=0===o.length?null:o[o.length-1],i=e.observeBoard();for(let r=l.length-1;r>=0;r--){const i=l[r];if(null===s||Array.isArray(s)&&-1===t(i,s)){const b=[];let A=null;for(let n=r-1;n>=0;n--){const r=l[n];if((null===s||Array.isArray(s)&&-1===t(r,s))&&(i[0]!==r[0]?(A=0,null!==e.getCellStateAt([r[0]-1,r[1]])&&e.getCellStateAt([r[0]-1,r[1]])<2&&b.push([r[0]-1,r[1]]),null!==e.getCellStateAt([r[0]+1,r[1]])&&e.getCellStateAt([r[0]+1,r[1]])<2&&b.push([r[0]+1,r[1]])):i[1]!==r[1]&&(A=1,null!==e.getCellStateAt([r[0],r[1]-1])&&e.getCellStateAt([r[0],r[1]-1])<2&&b.push([r[0],r[1]-1]),null!==e.getCellStateAt([r[0],r[1]+1])&&e.getCellStateAt([r[0],r[1]+1])<2&&b.push([r[0],r[1]+1])),b.length>0))break;if(Array.isArray(s)&&t(r,s)>-1)break}if((null===A||0===A)&&null!==e.getCellStateAt([i[0]-1,i[1]])&&e.getCellStateAt([i[0]-1,i[1]])<2&&b.push([i[0]-1,i[1]]),(null===A||1===A)&&null!==e.getCellStateAt([i[0],i[1]-1])&&e.getCellStateAt([i[0],i[1]-1])<2&&b.push([i[0],i[1]-1]),(null===A||0===A)&&null!==e.getCellStateAt([i[0]+1,i[1]])&&e.getCellStateAt([i[0]+1,i[1]])<2&&b.push([i[0]+1,i[1]]),(null===A||1===A)&&null!==e.getCellStateAt([i[0],i[1]+1])&&e.getCellStateAt([i[0],i[1]+1])<2&&b.push([i[0],i[1]+1]),0===b.length)continue;const d=Math.floor(Math.random()*b.length);return e.receiveAttack(b[d]),void n().publish("BATTLESHIP-COMPUTER-ATTACKED-POSITION",[b[d],a,o.length!==e.previousSinks().length])}break}const b=new Set;for(let e=0;e<i.length;e++)for(let n=0;n<i[e].length;n++)if(i[e][n]<2){let t=r(i.length,[n,e]);b.add(t)}for(let e=0;e<o.length;e++)for(let n=0;n<o[e].length;n++){let t=r(i.length,o[e][n]);b.has(t)&&b.delete(t)}let A=Array.from(b),d=A[Math.floor(Math.random()*A.length)],c=(p=i.length,u=d,[Math.floor(u/p),u-Math.floor(u/p)*p]);var p,u;e.receiveAttack(c),n().publish("BATTLESHIP-COMPUTER-ATTACKED-POSITION",[c,a,o.length!==e.previousSinks().length])}}},a=e=>{let n=e,t=!1,r=[],a=[],l=[];const o=()=>{let e=[];for(let t=0;t<Math.max(1,n);t++){e.push([]);for(let r=0;r<Math.max(1,n);r++)e[t].push(0)}return e};let s=o(),i=null;const b=(e,n,t)=>{if(u())return null;if(g()>=6)return"max";if(A(s,e,n,t)){const r=d(e,n,t);if(t)for(let e=r[0][1];e<=r[1][1];e++)s[e][n[0]]=1;else for(let e=r[0][0];e<=r[1][0];e++)s[n[1]][e]=1}},A=(e,n,t,r)=>{if(!Number.isInteger(n)||n<1||n>e.length)return!1;if(!p(t))return!1;if("boolean"!=typeof r)return!1;const a=d(n,t,r);if(a[0][0]<0||a[0][0]>=e.length||a[0][1]<0||a[0][1]>=e.length||a[1][0]<0||a[1][0]>=e.length||a[1][1]<0||a[1][1]>=e.length)return!1;for(let n=a[0][0]-1;n<=a[1][0]+1;n++)if(-1!==n&&n!==e.length)for(let t=a[0][1]-1;t<=a[1][1]+1;t++)if(-1!==t&&t!==e.length&&0!==e[t][n])return!1;return!0},d=(e,n,t)=>{const r=Math.abs(Math.floor((e-1)/2)),a=Math.abs(Math.ceil((e-1)/2));return t?[[n[0],n[1]-r],[n[0],n[1]+a]]:[[n[0]-r,n[1]],[n[0]+a,n[1]]]},c=(e,n)=>{if(0!==e[n[1]][n[0]]){const t=[],r=n=>{t.push(n),e[n[1]][n[0]]=0,n[1]>0&&0!==e[n[1]-1][n[0]]&&r([n[0],n[1]-1]),n[0]>0&&0!==e[n[1]][n[0]-1]&&r([n[0]-1,n[1]]),n[1]<e.length-1&&0!==e[n[1]+1][n[0]]&&r([n[0],n[1]+1]),n[0]<e.length-1&&0!==e[n[1]][n[0]+1]&&r([n[0]+1,n[1]])};return r(n),[e,t]}return null},p=e=>!!(Array.isArray(e)&&2===e.length&&Number.isInteger(e[0])&&e[0]>=0&&e[0]<s.length&&Number.isInteger(e[1])&&e[1]>=0&&e[1]<s.length),u=()=>t,h=()=>JSON.parse(JSON.stringify(s)),g=()=>{let e,n=0;e=t?JSON.parse(JSON.stringify(i)):h();for(let t=0;t<e.length;t++)for(let r=0;r<e[t].length;r++){const a=c(e,[r,t]);a&&a[1].length>0&&n++}return n};return{startGame:()=>{t=!0,i=h()},resetBoard:()=>{s=o(),i=null,t=!1,r=[],a=[],l=[]},randomiseBoard:()=>{const e=Math.floor(2*Math.random()+1)+4;for(let n=0;n<e;n++){const e=2,n=6;let t=Math.floor(Math.random()*(n-e+1))+e;const r=0!==Math.floor(2*Math.random()),a=[];for(;0===a.length&&t>=e;){for(let e=0;e<s.length;e++)for(let n=0;n<s[0].length;n++)A(s,t,[n,e],r)&&a.push([n,e]);0===a.length&&t--}const l=Math.floor(Math.random()*a.length);b(t,a[l],r)}},placeShip:b,moveShip:(e,n,t)=>{if(u())return null;if(!p(e))return;if(!p(n))return;if("boolean"!=typeof t)return!1;let r=h();const a=c(r,e);if(!a)return;r=a[0];const l=a[1];let o=!1;l.length>2&&l[0][1]!==l[1][1]&&(o=!0);const i=Math.ceil((l.length-1)/2);let b=[];if(o?l.sort(((e,n)=>e[1]-n[1])):l.sort(((e,n)=>e[0]-n[0])),b=l[i],t&&(o=!o),t?(n[0]+=b[1]-e[1],n[1]+=b[0]-e[0]):(n[0]+=b[0]-e[0],n[1]+=b[1]-e[1]),A(r,l.length,n,o)){s=r;for(let e=0;e<l.length;e++)o?s[n[1]+(e-i)][n[0]]=1:s[n[1]][n[0]+(e-i)]=1}},deleteShip:e=>{if(u())return null;p(e)&&c(s,e)},receiveAttack:e=>{if(!u())return!1;if(!p(e))return!1;if(s[e[1]][e[0]]<2){1===s[e[1]][e[0]]?(s[e[1]][e[0]]=3,a.push(e)):s[e[1]][e[0]]=2,r.push(e);let n=JSON.parse(JSON.stringify(i));const t=c(n,e);if(t){let e=!0;for(let n=0;n<t[1].length;n++)if(1===s[t[1][n][1]][t[1][n][0]]){e=!1;break}e&&l.push(t[1])}return!0}},getCellStateAt:e=>p(e)?s[e[1]][e[0]]:null,checkDefeat:()=>{if(!u())return!1;for(let e=0;e<s.length;e++)for(let n=0;n<s[e].length;n++)if(1===s[e][n])return!1;return!0},isGameStarted:u,observeBoard:h,totalNumberOfShips:g,remainingNumberOfShips:()=>t?g()-l.length:g(),previousAttacks:()=>JSON.parse(JSON.stringify(r)),previousHits:()=>JSON.parse(JSON.stringify(a)),previousSinks:()=>JSON.parse(JSON.stringify(l))}};var l=t(379),o=t.n(l),s=t(795),i=t.n(s),b=t(569),A=t.n(b),d=t(565),c=t.n(d),p=t(216),u=t.n(p),h=t(589),g=t.n(h),m=t(28),C={};C.styleTagTransform=g(),C.setAttributes=c(),C.insert=A().bind(null,"head"),C.domAPI=i(),C.insertStyleElement=u(),o()(m.Z,C),m.Z&&m.Z.locals&&m.Z.locals;var B=t(786),f={};f.styleTagTransform=g(),f.setAttributes=c(),f.insert=A().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=u(),o()(B.Z,f),B.Z&&B.Z.locals&&B.Z.locals,(()=>{const e=(()=>{let e=!1,n=!1,t=0,l=[r(),r()];l[1].setStyle("Computer");let o=[a(10),a(10)];const s=()=>{n=!0,e=!1},i=async()=>{if(!e||n)return null;await setTimeout((()=>{const e=(t+1)%2,n=o[e];return l[t].takeComputerTurn(n,e),n.checkDefeat()?(s(),!0):(b(),!0)}),2e3)||i()},b=()=>{t=(t+1)%2,"Computer"===l[t].getStyle()&&i()};return{startGame:()=>{if(e||n)return null;e=!0,n=!1,"Computer"===l[0].getStyle()&&o[0].randomiseBoard(),"Computer"===l[1].getStyle()&&o[1].randomiseBoard(),o[0].startGame(),o[1].startGame(),t=Math.floor(2*Math.random()),"Computer"===l[t].getStyle()&&i()},endGame:s,resetGame:()=>{e=!1,n=!1,o[0].resetBoard(),o[1].resetBoard()},manualAttack:(r,a)=>{if(!(Number.isInteger(r)&&r>=0&&r<=1))return null;if(!e||n)return null;if("Computer"===l[t].getStyle())return null;if(t===r)return null;const i=o[(t+1)%2];if(i.getCellStateAt(a)>=2)return null;const A=i.previousAttacks().length;if(i.receiveAttack(a),A!==i.previousAttacks().length){if(i.checkDefeat())return void s();b()}},isGameStarted:()=>e,isGameEnded:()=>n,getPlayers:()=>l,getGameboards:()=>o,changeTurn:b,getTurn:()=>t}})();let t=3,l=!1,o=[0,0],s=!1,i=3,b=!1,A=[0,0],d=!1,c=null;const p=(e,n,t)=>{const r=document.createElement(e);return r instanceof HTMLUnknownElement?null:(Array.isArray(n)&&n.forEach((e=>{"string"==typeof e&&r.classList.add(e)})),t instanceof HTMLElement&&t.appendChild(r),r)},u={base:p("div",["btls-base"],document.body),title:null,boardArea:null,board1:null,b1XAxis:null,b1YAxis:null,b1ID:null,b1Buttons:null,b1ChangeStyleButton:null,b1HideShipsButton:null,b1PlaceShipBox:null,b1PlaceShipModel:null,b1PlaceShipSizeInput:null,b1PlaceShipRotationButton:null,b1PlaceShipXCoordInput:null,b1PlaceShipYCoordInput:null,b1PlaceShipPlaceButton:null,infoBox:null,board2:null,b2XAxis:null,b2YAxis:null,b2ID:null,b2Buttons:null,b2ChangeStyleButton:null,b2HideShipsButton:null,b2PlaceShipBox:null,b2PlaceShipModel:null,b2PlaceShipSizeInput:null,b2PlaceShipRotationButton:null,b2PlaceShipXCoordInput:null,b2PlaceShipYCoordInput:null,b2PlaceShipPlaceButton:null,buttons:null,startButton:null,resetButton:null,mouseTrackModel:null},h=()=>{const n=e.getGameboards(),t=e.getPlayers();n[0].totalNumberOfShips()<1&&"Manual"===t[0].getStyle()||n[1].totalNumberOfShips()<1&&"Manual"===t[1].getStyle()?m("Please ensure all Manual players have at least one ship before starting the game"):(e.startGame(),e.isGameStarted()&&(u.boardArea.classList.remove("game-ended"),m(`Here we go! It's Player ${e.getTurn()+1} to move first.`),"Computer"===t[0].getStyle()&&f(e.getGameboards()[0],0,u.board1,!0),"Computer"===t[1].getStyle()&&f(e.getGameboards()[1],1,u.board2,!0)))},g=()=>{e.resetGame(),f(e.getGameboards()[0],0,u.board1,!1),f(e.getGameboards()[1],1,u.board2,!1),u.boardArea.classList.remove("game-ended"),m("Welcome to Battleship!")},m=e=>{u.infoBox.textContent=e},C=e=>e instanceof Element?p("div",["btls-cell"],e):null,B=(e,n)=>{switch(e.classList.remove("ship","hit","empty"),n){case 1:e.classList.add("ship");break;case 2:e.classList.add("attacked");break;case 3:e.classList.add("hit");break;default:e.classList.add("empty")}},f=(e,n,r,a)=>{if(!Y(e))return null;if(!(Number.isInteger(n)&&n>=0&&n<=1))return null;if(!(r instanceof HTMLElement))return null;r.replaceChildren();const o=e.observeBoard();for(let e=0;e<o.length;e++)for(let s=0;s<o[e].length;s++){const A=C(r);B(A,a&&1===o[e][s]?0:o[e][s]),A.addEventListener("click",(()=>{$(A,[s,e],n),j([s,e],n)})),A.addEventListener("mouseup",(()=>{c===n&&(L(n,0===n?t:i,[s,e],0===n?l:b),c=null,O())}))}},y=(n,t,r,a)=>{const l=e.getGameboards()[t].observeBoard();if(0===r)for(let e=0;e<l.length;e++)p("div",["btls-axis-no"],n).textContent=e;else for(let e=0;e<l[0].length;e++)p("div",["btls-axis-no"],n).textContent=e;a.appendChild(n)},I=(n,t)=>{let r,a,l;l=n+1,r=p("button",[`btls-b${l}-change-style-button`],t),r.textContent="Change Style",r.addEventListener("click",(()=>{M(n)})),a=p("button",[`btls-b${l}-hide-ships-button`],t),a.addEventListener("click",(()=>{z(n)})),0===n?(u.b1ChangeStyleButton=r,u.b1HideShipsButton=a):(u.b2ChangeStyleButton=r,u.b2HideShipsButton=a),"Computer"===e.getPlayers()[n].getStyle()&&z(n),G(n)},v=(e,n)=>{const r=e+1;let a=p("div",[`btls-b${r}-place-ship-box`],n);0===e?u.b1PlaceShipBox=a:u.b2PlaceShipBox=a;let o=p("div",[`btls-b${r}-place-ship-model`],a);o.style.display="grid",o.addEventListener("mousedown",(()=>{c=e,P(0===e?t:i,0===e?l:b)})),0===e?u.b1PlaceShipModel=o:u.b2PlaceShipModel=o,x(e,a),S(e,0,a),S(e,1,a),k(e,a),w(e,a),E(0===e?u.b1PlaceShipModel:u.b2PlaceShipModel,["btls-model-cell"],0===e?t:i,0===e?l:b)};window.addEventListener("mouseup",(()=>{c=null,O()}));const x=(e,n)=>{let r,a,o;o=e+1,r=p("label",[`btls-b${o}-place-ship-size-label`],n),r.textContent="Size",r.setAttribute("for",`btls-b${o}-place-ship-size`),a=p("input",[`btls-b${o}-place-ship-size`],n),a.setAttribute("id",`btls-b${o}-place-ship-size`),a.setAttribute("type","number"),a.value=0===e?t:i,a.addEventListener("input",(()=>{a.value=Math.min(10,Math.max(1,a.value));const n=parseInt(a.value);0===e?t=n:i=n,E(0===e?u.b1PlaceShipModel:u.b2PlaceShipModel,["btls-model-cell"],0===e?t:i,0===e?l:b)})),0===e?u.b1PlaceShipSizeInput=a:u.b2PlaceShipSizeInput=a},S=(e,n,t)=>{let r,a,l,s;l=e+1,s=0===n?"x":"y",r=p("label",[`btls-b${l}-place-ship-${s}-coord-label`],t),r.textContent=`${s.toUpperCase()}-Coord: `,r.setAttribute("for",`btls-b${l}-place-ship-${s}-coord`),a=p("input",[`btls-b${l}-place-ship-${s}-coord`],t),a.setAttribute("id",`btls-b${l}-place-ship-${s}-coord`),a.setAttribute("type","number"),a.value=0===n?0===e?o[0]:A[0]:0===e?o[1]:A[1],a.addEventListener("input",(()=>{a.value=Math.min(9,Math.max(0,a.value));const t=parseInt(a.value);0===n?0===e?o[0]=t:A[0]=t:0===e?o[1]=t:A[1]=t})),0===n?0===e?u.b1PlaceShipXCoordInput=a:u.b2PlaceShipXCoordInput=a:0===e?u.b1PlaceShipYCoordInput=a:u.b2PlaceShipYCoordInput=a},k=(e,n)=>{let r,a;a=e+1,r=p("button",[`btls-b${a}-place-ship-rotation`],n),r.textContent="Rotate Ship",r.addEventListener("click",(()=>{0===e?l=!l:b=!b,E(0===e?u.b1PlaceShipModel:u.b2PlaceShipModel,["btls-model-cell"],0===e?t:i,0===e?l:b)})),0===e?u.b1PlaceShipRotationButton=r:u.b2PlaceShipRotationButton=r},w=(e,n)=>{let r,a;a=e+1,r=p("button",[`btls-b${a}-place-ship`],n),r.textContent="Place Ship",r.addEventListener("click",(()=>{L(e,0===e?t:i,0===e?o:A,0===e?l:b)})),0===e?u.b1PlaceShipPlaceButton=r:u.b2PlaceShipPlaceButton=r},E=(e,n,t,r)=>{e.replaceChildren();for(let r=0;r<t;r++)p("div",n,e);r?(e.style["grid-template-rows"]=`repeat(${t}, auto)`,e.style["grid-template-columns"]="auto",e.style.width="10%",e.style.height=10*t+"%"):(e.style["grid-template-rows"]="auto",e.style["grid-template-columns"]=`repeat(${t}, auto)`,e.style.width=10*t+"%",e.style.height="10%")},P=(e,n)=>{u.mouseTrackModel=p("div",["btls-mouse-track-model"],u.base),E(u.mouseTrackModel,["btls-mouse-track-model-cell"],e,n)};window.addEventListener("mousemove",(e=>{u.mouseTrackModel instanceof HTMLElement&&(u.mouseTrackModel.style.left=`${e.clientX}px`,u.mouseTrackModel.style.top=`${e.clientY}px`)}));const O=()=>{u.mouseTrackModel instanceof HTMLElement&&u.mouseTrackModel.remove()},M=n=>{if(e.isGameStarted()||e.isGameEnded())return;const t=e.getPlayers(),r="Manual"===t[n].getStyle()?"Computer":"Manual";t[n].setStyle(r),"Computer"===r&&(z(n),e.getGameboards()[n].resetBoard(),f(e.getGameboards()[n],n,0===n?u.board1:u.board2,!0)),T(n)},T=n=>{const t=e.getPlayers();0===n?u.b1ID.textContent=`Player One: ${t[n].getStyle()}`:u.b2ID.textContent=`Player Two: ${t[n].getStyle()}`},z=n=>{const t=0===n?u.board1:u.board2;"Computer"===e.getPlayers()[n].getStyle()?(t.classList.add("ships-hidden"),0===n?s=!0:d=!0):t.classList.contains("ships-hidden")?(t.classList.remove("ships-hidden"),0===n?s=!1:d=!1):(t.classList.add("ships-hidden"),0===n?s=!0:d=!0),G(n)},G=e=>{const n=0===e?s:d;(0===e?u.b1HideShipsButton:u.b2HideShipsButton).textContent=n?"Show Ships":"Hide Ships"},L=(n,t,r,a)=>{"Computer"!==e.getPlayers()[n].getStyle()&&(e.isGameStarted()||e.isGameEnded()||("max"===e.getGameboards()[n].placeShip(t,r,a)?m(`Player ${n+1} cannot place any more ships.`):0===n?f(e.getGameboards()[0],0,u.board1,!1):f(e.getGameboards()[1],1,u.board2,!1)))},j=(n,t)=>{if(!e.isGameStarted()&&!e.isGameEnded())return 0===t&&s||1===t&&d?null:(e.getGameboards()[t].deleteShip(n),void(0===t?f(e.getGameboards()[0],0,u.board1,!1):f(e.getGameboards()[1],1,u.board2,!1)))},$=(n,t,r)=>{if(e.isGameStarted()&&!e.isGameEnded()){const a=e.getGameboards()[r],l=a.previousSinks().length;if(null!==e.manualAttack(r,t)){const e=l!==a.previousSinks().length;N(n,t,r,e)}}};n().subscribe("BATTLESHIP-COMPUTER-ATTACKED-POSITION",((n,t)=>{let[...r]=t;if(e.isGameStarted()&&!e.isGameEnded()){const e=r[0],n=r[1],t=r[2],a=0===n?u.board1.children[10*e[1]+e[0]]:u.board2.children[10*e[1]+e[0]];N(a,e,n,t)}}));const N=(n,t,r,a)=>{let l,o;o=e.getGameboards()[r],l=o.getCellStateAt(t),B(n,l),m(`Player ${(e.getTurn()+1)%2+1} attacks position [${t[0]}, ${t[1]}]. It is ${3===l?"":"not "} a successful hit. ${a?"The battleship was sunk!":""} It's Player ${e.getTurn()+1}'s move.`),e.isGameEnded()&&(f(e.getGameboards()[0],0,u.board1,!1),f(e.getGameboards()[1],1,u.board2,!1),u.boardArea.classList.add("game-ended"),m(`The game has been won! Player ${e.getTurn()+1} is the winner!`))},Y=e=>null===e||"object"!=typeof e?null:!!Object.hasOwn(e,"observeBoard")||null;return{ele:u,game:e,displayGame:()=>{u.base.remove(),u.base=p("div",["btls-base"],document.body),u.title=p("div",["btls-title"],u.base),u.boardArea=p("div",["btls-board-area"],u.base),u.board2=p("div",["btls-board-two"],u.boardArea),u.b2XAxis=p("div",["btls-axis-2-x"],u.boardArea),u.b2YAxis=p("div",["btls-axis-2-y"],u.boardArea),u.b2Buttons=p("div",["btls-b2-btns"],u.boardArea),u.b2ID=p("div",["btls-b2-id"],u.boardArea),u.infoBox=p("div",["btls-info-box"],u.boardArea),u.b1ID=p("div",["btls-b1-id"],u.boardArea),u.board1=p("div",["btls-board-one"],u.boardArea),u.b1XAxis=p("div",["btls-axis-1-x"],u.boardArea),u.b1YAxis=p("div",["btls-axis-1-y"],u.boardArea),u.b1Buttons=p("div",["btls-b1-btns"],u.boardArea),f(e.getGameboards()[0],0,u.board1,!1),f(e.getGameboards()[1],1,u.board2,!1),y(u.b1XAxis,0,0,u.boardArea),y(u.b1YAxis,0,1,u.boardArea),y(u.b2XAxis,1,0,u.boardArea),y(u.b2YAxis,1,1,u.boardArea),u.title.textContent="BATTLESHIP",T(0),T(1),m("Welcome to Battleship!"),I(1,u.b2Buttons),I(0,u.b1Buttons),u.buttons=p("div",["btls-buttons"],u.base),u.startButton=p("button",["btls-start"],u.buttons),u.startButton.addEventListener("click",h),u.resetButton=p("button",["btls-reset"],u.buttons),u.resetButton.addEventListener("click",g),u.startButton.textContent="Start Game",u.resetButton.textContent="Reset Game",v(0,u.boardArea),v(1,u.boardArea)},createElement:p,createCell:C,createBoard:f}})().displayGame()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,